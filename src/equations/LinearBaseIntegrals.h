#pragma once
#include "BaseIntegrals.h"

/************************************************************************/
/* 
    Structure of the base integrals are as follows: 
        [shape functions (27)] [derivative x,y,z (3)] [test function x,y,z (3)], [cells (8)]
         
*/
/************************************************************************/

class LinearBaseIntegrals : public BaseIntegrals {

public:

    LinearBaseIntegrals(ettention::Vec3f& voxelSize) :
        BaseIntegrals(voxelSize)
    {
        init();
    }

    LinearBaseIntegrals(ettention::Vec3d& voxelSize) :
        BaseIntegrals(voxelSize)
    {
        init();
    }

    //From BaseIntegrals
    //  inline REAL* data()
    //  inline REAL value(unsigned int basisFunc, unsigned int deriv, unsigned int testFunc, unsigned int cell)

protected:
    //From BaseIntegrals:
    //  REAL dx;
    //  REAL dy;
    //  REAL dz;
    //  REAL values[27 * 3 * 3 * 8];

    void init() override {
        MAP(values,0,0,0,0) = -dz * dy / dx / static_cast<REAL>(36);
        MAP(values,0,0,0,1) = 0;
        MAP(values,0,0,0,2) = 0;
        MAP(values,0,0,0,3) = 0;
        MAP(values,0,0,0,4) = 0;
        MAP(values,0,0,0,5) = 0;
        MAP(values,0,0,0,6) = 0;
        MAP(values,0,0,0,7) = 0;
        MAP(values,0,0,1,0) = -dz / static_cast<REAL>(24);
        MAP(values,0,0,1,1) = 0;
        MAP(values,0,0,1,2) = 0;
        MAP(values,0,0,1,3) = 0;
        MAP(values,0,0,1,4) = 0;
        MAP(values,0,0,1,5) = 0;
        MAP(values,0,0,1,6) = 0;
        MAP(values,0,0,1,7) = 0;
        MAP(values,0,0,2,0) = -dy / static_cast<REAL>(24);
        MAP(values,0,0,2,1) = 0;
        MAP(values,0,0,2,2) = 0;
        MAP(values,0,0,2,3) = 0;
        MAP(values,0,0,2,4) = 0;
        MAP(values,0,0,2,5) = 0;
        MAP(values,0,0,2,6) = 0;
        MAP(values,0,0,2,7) = 0;
        MAP(values,0,1,0,0) = -dz / static_cast<REAL>(24);
        MAP(values,0,1,0,1) = 0;
        MAP(values,0,1,0,2) = 0;
        MAP(values,0,1,0,3) = 0;
        MAP(values,0,1,0,4) = 0;
        MAP(values,0,1,0,5) = 0;
        MAP(values,0,1,0,6) = 0;
        MAP(values,0,1,0,7) = 0;
        MAP(values,0,1,1,0) = -dz / dy * dx / static_cast<REAL>(36);
        MAP(values,0,1,1,1) = 0;
        MAP(values,0,1,1,2) = 0;
        MAP(values,0,1,1,3) = 0;
        MAP(values,0,1,1,4) = 0;
        MAP(values,0,1,1,5) = 0;
        MAP(values,0,1,1,6) = 0;
        MAP(values,0,1,1,7) = 0;
        MAP(values,0,1,2,0) = -dx / static_cast<REAL>(24);
        MAP(values,0,1,2,1) = 0;
        MAP(values,0,1,2,2) = 0;
        MAP(values,0,1,2,3) = 0;
        MAP(values,0,1,2,4) = 0;
        MAP(values,0,1,2,5) = 0;
        MAP(values,0,1,2,6) = 0;
        MAP(values,0,1,2,7) = 0;
        MAP(values,0,2,0,0) = -dy / static_cast<REAL>(24);
        MAP(values,0,2,0,1) = 0;
        MAP(values,0,2,0,2) = 0;
        MAP(values,0,2,0,3) = 0;
        MAP(values,0,2,0,4) = 0;
        MAP(values,0,2,0,5) = 0;
        MAP(values,0,2,0,6) = 0;
        MAP(values,0,2,0,7) = 0;
        MAP(values,0,2,1,0) = -dx / static_cast<REAL>(24);
        MAP(values,0,2,1,1) = 0;
        MAP(values,0,2,1,2) = 0;
        MAP(values,0,2,1,3) = 0;
        MAP(values,0,2,1,4) = 0;
        MAP(values,0,2,1,5) = 0;
        MAP(values,0,2,1,6) = 0;
        MAP(values,0,2,1,7) = 0;
        MAP(values,0,2,2,0) = -1 / dz * dy * dx / static_cast<REAL>(36);
        MAP(values,0,2,2,1) = 0;
        MAP(values,0,2,2,2) = 0;
        MAP(values,0,2,2,3) = 0;
        MAP(values,0,2,2,4) = 0;
        MAP(values,0,2,2,5) = 0;
        MAP(values,0,2,2,6) = 0;
        MAP(values,0,2,2,7) = 0;
        MAP(values,1,0,0,0) = dz * dy / dx / static_cast<REAL>(36);
        MAP(values,1,0,0,1) = dz * dy / dx / static_cast<REAL>(36);
        MAP(values,1,0,0,2) = 0;
        MAP(values,1,0,0,3) = 0;
        MAP(values,1,0,0,4) = 0;
        MAP(values,1,0,0,5) = 0;
        MAP(values,1,0,0,6) = 0;
        MAP(values,1,0,0,7) = 0;
        MAP(values,1,0,1,0) = dz / static_cast<REAL>(24);
        MAP(values,1,0,1,1) = -dz / static_cast<REAL>(24);
        MAP(values,1,0,1,2) = 0;
        MAP(values,1,0,1,3) = 0;
        MAP(values,1,0,1,4) = 0;
        MAP(values,1,0,1,5) = 0;
        MAP(values,1,0,1,6) = 0;
        MAP(values,1,0,1,7) = 0;
        MAP(values,1,0,2,0) = dy / static_cast<REAL>(24);
        MAP(values,1,0,2,1) = -dy / static_cast<REAL>(24);
        MAP(values,1,0,2,2) = 0;
        MAP(values,1,0,2,3) = 0;
        MAP(values,1,0,2,4) = 0;
        MAP(values,1,0,2,5) = 0;
        MAP(values,1,0,2,6) = 0;
        MAP(values,1,0,2,7) = 0;
        MAP(values,1,1,0,0) = -dz / static_cast<REAL>(24);
        MAP(values,1,1,0,1) = dz / static_cast<REAL>(24);
        MAP(values,1,1,0,2) = 0;
        MAP(values,1,1,0,3) = 0;
        MAP(values,1,1,0,4) = 0;
        MAP(values,1,1,0,5) = 0;
        MAP(values,1,1,0,6) = 0;
        MAP(values,1,1,0,7) = 0;
        MAP(values,1,1,1,0) = -dz / dy * dx / static_cast<REAL>(18);
        MAP(values,1,1,1,1) = -dz / dy * dx / static_cast<REAL>(18);
        MAP(values,1,1,1,2) = 0;
        MAP(values,1,1,1,3) = 0;
        MAP(values,1,1,1,4) = 0;
        MAP(values,1,1,1,5) = 0;
        MAP(values,1,1,1,6) = 0;
        MAP(values,1,1,1,7) = 0;
        MAP(values,1,1,2,0) = -dx / static_cast<REAL>(12);
        MAP(values,1,1,2,1) = -dx / static_cast<REAL>(12);
        MAP(values,1,1,2,2) = 0;
        MAP(values,1,1,2,3) = 0;
        MAP(values,1,1,2,4) = 0;
        MAP(values,1,1,2,5) = 0;
        MAP(values,1,1,2,6) = 0;
        MAP(values,1,1,2,7) = 0;
        MAP(values,1,2,0,0) = -dy / static_cast<REAL>(24);
        MAP(values,1,2,0,1) = dy / static_cast<REAL>(24);
        MAP(values,1,2,0,2) = 0;
        MAP(values,1,2,0,3) = 0;
        MAP(values,1,2,0,4) = 0;
        MAP(values,1,2,0,5) = 0;
        MAP(values,1,2,0,6) = 0;
        MAP(values,1,2,0,7) = 0;
        MAP(values,1,2,1,0) = -dx / static_cast<REAL>(12);
        MAP(values,1,2,1,1) = -dx / static_cast<REAL>(12);
        MAP(values,1,2,1,2) = 0;
        MAP(values,1,2,1,3) = 0;
        MAP(values,1,2,1,4) = 0;
        MAP(values,1,2,1,5) = 0;
        MAP(values,1,2,1,6) = 0;
        MAP(values,1,2,1,7) = 0;
        MAP(values,1,2,2,0) = -1 / dz * dy * dx / static_cast<REAL>(18);
        MAP(values,1,2,2,1) = -1 / dz * dy * dx / static_cast<REAL>(18);
        MAP(values,1,2,2,2) = 0;
        MAP(values,1,2,2,3) = 0;
        MAP(values,1,2,2,4) = 0;
        MAP(values,1,2,2,5) = 0;
        MAP(values,1,2,2,6) = 0;
        MAP(values,1,2,2,7) = 0;
        MAP(values,2,0,0,0) = 0;
        MAP(values,2,0,0,1) = -dz * dy / dx / static_cast<REAL>(36);
        MAP(values,2,0,0,2) = 0;
        MAP(values,2,0,0,3) = 0;
        MAP(values,2,0,0,4) = 0;
        MAP(values,2,0,0,5) = 0;
        MAP(values,2,0,0,6) = 0;
        MAP(values,2,0,0,7) = 0;
        MAP(values,2,0,1,0) = 0;
        MAP(values,2,0,1,1) = dz / static_cast<REAL>(24);
        MAP(values,2,0,1,2) = 0;
        MAP(values,2,0,1,3) = 0;
        MAP(values,2,0,1,4) = 0;
        MAP(values,2,0,1,5) = 0;
        MAP(values,2,0,1,6) = 0;
        MAP(values,2,0,1,7) = 0;
        MAP(values,2,0,2,0) = 0;
        MAP(values,2,0,2,1) = dy / static_cast<REAL>(24);
        MAP(values,2,0,2,2) = 0;
        MAP(values,2,0,2,3) = 0;
        MAP(values,2,0,2,4) = 0;
        MAP(values,2,0,2,5) = 0;
        MAP(values,2,0,2,6) = 0;
        MAP(values,2,0,2,7) = 0;
        MAP(values,2,1,0,0) = 0;
        MAP(values,2,1,0,1) = dz / static_cast<REAL>(24);
        MAP(values,2,1,0,2) = 0;
        MAP(values,2,1,0,3) = 0;
        MAP(values,2,1,0,4) = 0;
        MAP(values,2,1,0,5) = 0;
        MAP(values,2,1,0,6) = 0;
        MAP(values,2,1,0,7) = 0;
        MAP(values,2,1,1,0) = 0;
        MAP(values,2,1,1,1) = -dz / dy * dx / static_cast<REAL>(36);
        MAP(values,2,1,1,2) = 0;
        MAP(values,2,1,1,3) = 0;
        MAP(values,2,1,1,4) = 0;
        MAP(values,2,1,1,5) = 0;
        MAP(values,2,1,1,6) = 0;
        MAP(values,2,1,1,7) = 0;
        MAP(values,2,1,2,0) = 0;
        MAP(values,2,1,2,1) = -dx / static_cast<REAL>(24);
        MAP(values,2,1,2,2) = 0;
        MAP(values,2,1,2,3) = 0;
        MAP(values,2,1,2,4) = 0;
        MAP(values,2,1,2,5) = 0;
        MAP(values,2,1,2,6) = 0;
        MAP(values,2,1,2,7) = 0;
        MAP(values,2,2,0,0) = 0;
        MAP(values,2,2,0,1) = dy / static_cast<REAL>(24);
        MAP(values,2,2,0,2) = 0;
        MAP(values,2,2,0,3) = 0;
        MAP(values,2,2,0,4) = 0;
        MAP(values,2,2,0,5) = 0;
        MAP(values,2,2,0,6) = 0;
        MAP(values,2,2,0,7) = 0;
        MAP(values,2,2,1,0) = 0;
        MAP(values,2,2,1,1) = -dx / static_cast<REAL>(24);
        MAP(values,2,2,1,2) = 0;
        MAP(values,2,2,1,3) = 0;
        MAP(values,2,2,1,4) = 0;
        MAP(values,2,2,1,5) = 0;
        MAP(values,2,2,1,6) = 0;
        MAP(values,2,2,1,7) = 0;
        MAP(values,2,2,2,0) = 0;
        MAP(values,2,2,2,1) = -1 / dz * dy * dx / static_cast<REAL>(36);
        MAP(values,2,2,2,2) = 0;
        MAP(values,2,2,2,3) = 0;
        MAP(values,2,2,2,4) = 0;
        MAP(values,2,2,2,5) = 0;
        MAP(values,2,2,2,6) = 0;
        MAP(values,2,2,2,7) = 0;
        MAP(values,3,0,0,0) = -dz * dy / dx / static_cast<REAL>(18);
        MAP(values,3,0,0,1) = 0;
        MAP(values,3,0,0,2) = -dz * dy / dx / static_cast<REAL>(18);
        MAP(values,3,0,0,3) = 0;
        MAP(values,3,0,0,4) = 0;
        MAP(values,3,0,0,5) = 0;
        MAP(values,3,0,0,6) = 0;
        MAP(values,3,0,0,7) = 0;
        MAP(values,3,0,1,0) = -dz / static_cast<REAL>(24);
        MAP(values,3,0,1,1) = 0;
        MAP(values,3,0,1,2) = dz / static_cast<REAL>(24);
        MAP(values,3,0,1,3) = 0;
        MAP(values,3,0,1,4) = 0;
        MAP(values,3,0,1,5) = 0;
        MAP(values,3,0,1,6) = 0;
        MAP(values,3,0,1,7) = 0;
        MAP(values,3,0,2,0) = -dy / static_cast<REAL>(12);
        MAP(values,3,0,2,1) = 0;
        MAP(values,3,0,2,2) = -dy / static_cast<REAL>(12);
        MAP(values,3,0,2,3) = 0;
        MAP(values,3,0,2,4) = 0;
        MAP(values,3,0,2,5) = 0;
        MAP(values,3,0,2,6) = 0;
        MAP(values,3,0,2,7) = 0;
        MAP(values,3,1,0,0) = dz / static_cast<REAL>(24);
        MAP(values,3,1,0,1) = 0;
        MAP(values,3,1,0,2) = -dz / static_cast<REAL>(24);
        MAP(values,3,1,0,3) = 0;
        MAP(values,3,1,0,4) = 0;
        MAP(values,3,1,0,5) = 0;
        MAP(values,3,1,0,6) = 0;
        MAP(values,3,1,0,7) = 0;
        MAP(values,3,1,1,0) = dz / dy * dx / static_cast<REAL>(36);
        MAP(values,3,1,1,1) = 0;
        MAP(values,3,1,1,2) = dz / dy * dx / static_cast<REAL>(36);
        MAP(values,3,1,1,3) = 0;
        MAP(values,3,1,1,4) = 0;
        MAP(values,3,1,1,5) = 0;
        MAP(values,3,1,1,6) = 0;
        MAP(values,3,1,1,7) = 0;
        MAP(values,3,1,2,0) = dx / static_cast<REAL>(24);
        MAP(values,3,1,2,1) = 0;
        MAP(values,3,1,2,2) = -dx / static_cast<REAL>(24);
        MAP(values,3,1,2,3) = 0;
        MAP(values,3,1,2,4) = 0;
        MAP(values,3,1,2,5) = 0;
        MAP(values,3,1,2,6) = 0;
        MAP(values,3,1,2,7) = 0;
        MAP(values,3,2,0,0) = -dy / static_cast<REAL>(12);
        MAP(values,3,2,0,1) = 0;
        MAP(values,3,2,0,2) = -dy / static_cast<REAL>(12);
        MAP(values,3,2,0,3) = 0;
        MAP(values,3,2,0,4) = 0;
        MAP(values,3,2,0,5) = 0;
        MAP(values,3,2,0,6) = 0;
        MAP(values,3,2,0,7) = 0;
        MAP(values,3,2,1,0) = -dx / static_cast<REAL>(24);
        MAP(values,3,2,1,1) = 0;
        MAP(values,3,2,1,2) = dx / static_cast<REAL>(24);
        MAP(values,3,2,1,3) = 0;
        MAP(values,3,2,1,4) = 0;
        MAP(values,3,2,1,5) = 0;
        MAP(values,3,2,1,6) = 0;
        MAP(values,3,2,1,7) = 0;
        MAP(values,3,2,2,0) = -1 / dz * dy * dx / static_cast<REAL>(18);
        MAP(values,3,2,2,1) = 0;
        MAP(values,3,2,2,2) = -1 / dz * dy * dx / static_cast<REAL>(18);
        MAP(values,3,2,2,3) = 0;
        MAP(values,3,2,2,4) = 0;
        MAP(values,3,2,2,5) = 0;
        MAP(values,3,2,2,6) = 0;
        MAP(values,3,2,2,7) = 0;
        MAP(values,4,0,0,0) = dz * dy / dx / static_cast<REAL>(18);
        MAP(values,4,0,0,1) = dz * dy / dx / static_cast<REAL>(18);
        MAP(values,4,0,0,2) = dz * dy / dx / static_cast<REAL>(18);
        MAP(values,4,0,0,3) = dz * dy / dx / static_cast<REAL>(18);
        MAP(values,4,0,0,4) = 0;
        MAP(values,4,0,0,5) = 0;
        MAP(values,4,0,0,6) = 0;
        MAP(values,4,0,0,7) = 0;
        MAP(values,4,0,1,0) = dz / static_cast<REAL>(24);
        MAP(values,4,0,1,1) = -dz / static_cast<REAL>(24);
        MAP(values,4,0,1,2) = -dz / static_cast<REAL>(24);
        MAP(values,4,0,1,3) = dz / static_cast<REAL>(24);
        MAP(values,4,0,1,4) = 0;
        MAP(values,4,0,1,5) = 0;
        MAP(values,4,0,1,6) = 0;
        MAP(values,4,0,1,7) = 0;
        MAP(values,4,0,2,0) = dy / static_cast<REAL>(12);
        MAP(values,4,0,2,1) = -dy / static_cast<REAL>(12);
        MAP(values,4,0,2,2) = dy / static_cast<REAL>(12);
        MAP(values,4,0,2,3) = -dy / static_cast<REAL>(12);
        MAP(values,4,0,2,4) = 0;
        MAP(values,4,0,2,5) = 0;
        MAP(values,4,0,2,6) = 0;
        MAP(values,4,0,2,7) = 0;
        MAP(values,4,1,0,0) = dz / static_cast<REAL>(24);
        MAP(values,4,1,0,1) = -dz / static_cast<REAL>(24);
        MAP(values,4,1,0,2) = -dz / static_cast<REAL>(24);
        MAP(values,4,1,0,3) = dz / static_cast<REAL>(24);
        MAP(values,4,1,0,4) = 0;
        MAP(values,4,1,0,5) = 0;
        MAP(values,4,1,0,6) = 0;
        MAP(values,4,1,0,7) = 0;
        MAP(values,4,1,1,0) = dz / dy * dx / static_cast<REAL>(18);
        MAP(values,4,1,1,1) = dz / dy * dx / static_cast<REAL>(18);
        MAP(values,4,1,1,2) = dz / dy * dx / static_cast<REAL>(18);
        MAP(values,4,1,1,3) = dz / dy * dx / static_cast<REAL>(18);
        MAP(values,4,1,1,4) = 0;
        MAP(values,4,1,1,5) = 0;
        MAP(values,4,1,1,6) = 0;
        MAP(values,4,1,1,7) = 0;
        MAP(values,4,1,2,0) = dx / static_cast<REAL>(12);
        MAP(values,4,1,2,1) = dx / static_cast<REAL>(12);
        MAP(values,4,1,2,2) = -dx / static_cast<REAL>(12);
        MAP(values,4,1,2,3) = -dx / static_cast<REAL>(12);
        MAP(values,4,1,2,4) = 0;
        MAP(values,4,1,2,5) = 0;
        MAP(values,4,1,2,6) = 0;
        MAP(values,4,1,2,7) = 0;
        MAP(values,4,2,0,0) = -dy / static_cast<REAL>(12);
        MAP(values,4,2,0,1) = dy / static_cast<REAL>(12);
        MAP(values,4,2,0,2) = -dy / static_cast<REAL>(12);
        MAP(values,4,2,0,3) = dy / static_cast<REAL>(12);
        MAP(values,4,2,0,4) = 0;
        MAP(values,4,2,0,5) = 0;
        MAP(values,4,2,0,6) = 0;
        MAP(values,4,2,0,7) = 0;
        MAP(values,4,2,1,0) = -dx / static_cast<REAL>(12);
        MAP(values,4,2,1,1) = -dx / static_cast<REAL>(12);
        MAP(values,4,2,1,2) = dx / static_cast<REAL>(12);
        MAP(values,4,2,1,3) = dx / static_cast<REAL>(12);
        MAP(values,4,2,1,4) = 0;
        MAP(values,4,2,1,5) = 0;
        MAP(values,4,2,1,6) = 0;
        MAP(values,4,2,1,7) = 0;
        MAP(values,4,2,2,0) = -1 / dz * dy * dx / static_cast<REAL>(9);
        MAP(values,4,2,2,1) = -1 / dz * dy * dx / static_cast<REAL>(9);
        MAP(values,4,2,2,2) = -1 / dz * dy * dx / static_cast<REAL>(9);
        MAP(values,4,2,2,3) = -1 / dz * dy * dx / static_cast<REAL>(9);
        MAP(values,4,2,2,4) = 0;
        MAP(values,4,2,2,5) = 0;
        MAP(values,4,2,2,6) = 0;
        MAP(values,4,2,2,7) = 0;
        MAP(values,5,0,0,0) = 0;
        MAP(values,5,0,0,1) = -dz * dy / dx / static_cast<REAL>(18);
        MAP(values,5,0,0,2) = 0;
        MAP(values,5,0,0,3) = -dz * dy / dx / static_cast<REAL>(18);
        MAP(values,5,0,0,4) = 0;
        MAP(values,5,0,0,5) = 0;
        MAP(values,5,0,0,6) = 0;
        MAP(values,5,0,0,7) = 0;
        MAP(values,5,0,1,0) = 0;
        MAP(values,5,0,1,1) = dz / static_cast<REAL>(24);
        MAP(values,5,0,1,2) = 0;
        MAP(values,5,0,1,3) = -dz / static_cast<REAL>(24);
        MAP(values,5,0,1,4) = 0;
        MAP(values,5,0,1,5) = 0;
        MAP(values,5,0,1,6) = 0;
        MAP(values,5,0,1,7) = 0;
        MAP(values,5,0,2,0) = 0;
        MAP(values,5,0,2,1) = dy / static_cast<REAL>(12);
        MAP(values,5,0,2,2) = 0;
        MAP(values,5,0,2,3) = dy / static_cast<REAL>(12);
        MAP(values,5,0,2,4) = 0;
        MAP(values,5,0,2,5) = 0;
        MAP(values,5,0,2,6) = 0;
        MAP(values,5,0,2,7) = 0;
        MAP(values,5,1,0,0) = 0;
        MAP(values,5,1,0,1) = -dz / static_cast<REAL>(24);
        MAP(values,5,1,0,2) = 0;
        MAP(values,5,1,0,3) = dz / static_cast<REAL>(24);
        MAP(values,5,1,0,4) = 0;
        MAP(values,5,1,0,5) = 0;
        MAP(values,5,1,0,6) = 0;
        MAP(values,5,1,0,7) = 0;
        MAP(values,5,1,1,0) = 0;
        MAP(values,5,1,1,1) = dz / dy * dx / static_cast<REAL>(36);
        MAP(values,5,1,1,2) = 0;
        MAP(values,5,1,1,3) = dz / dy * dx / static_cast<REAL>(36);
        MAP(values,5,1,1,4) = 0;
        MAP(values,5,1,1,5) = 0;
        MAP(values,5,1,1,6) = 0;
        MAP(values,5,1,1,7) = 0;
        MAP(values,5,1,2,0) = 0;
        MAP(values,5,1,2,1) = dx / static_cast<REAL>(24);
        MAP(values,5,1,2,2) = 0;
        MAP(values,5,1,2,3) = -dx / static_cast<REAL>(24);
        MAP(values,5,1,2,4) = 0;
        MAP(values,5,1,2,5) = 0;
        MAP(values,5,1,2,6) = 0;
        MAP(values,5,1,2,7) = 0;
        MAP(values,5,2,0,0) = 0;
        MAP(values,5,2,0,1) = dy / static_cast<REAL>(12);
        MAP(values,5,2,0,2) = 0;
        MAP(values,5,2,0,3) = dy / static_cast<REAL>(12);
        MAP(values,5,2,0,4) = 0;
        MAP(values,5,2,0,5) = 0;
        MAP(values,5,2,0,6) = 0;
        MAP(values,5,2,0,7) = 0;
        MAP(values,5,2,1,0) = 0;
        MAP(values,5,2,1,1) = -dx / static_cast<REAL>(24);
        MAP(values,5,2,1,2) = 0;
        MAP(values,5,2,1,3) = dx / static_cast<REAL>(24);
        MAP(values,5,2,1,4) = 0;
        MAP(values,5,2,1,5) = 0;
        MAP(values,5,2,1,6) = 0;
        MAP(values,5,2,1,7) = 0;
        MAP(values,5,2,2,0) = 0;
        MAP(values,5,2,2,1) = -1 / dz * dy * dx / static_cast<REAL>(18);
        MAP(values,5,2,2,2) = 0;
        MAP(values,5,2,2,3) = -1 / dz * dy * dx / static_cast<REAL>(18);
        MAP(values,5,2,2,4) = 0;
        MAP(values,5,2,2,5) = 0;
        MAP(values,5,2,2,6) = 0;
        MAP(values,5,2,2,7) = 0;
        MAP(values,6,0,0,0) = 0;
        MAP(values,6,0,0,1) = 0;
        MAP(values,6,0,0,2) = -dz * dy / dx / static_cast<REAL>(36);
        MAP(values,6,0,0,3) = 0;
        MAP(values,6,0,0,4) = 0;
        MAP(values,6,0,0,5) = 0;
        MAP(values,6,0,0,6) = 0;
        MAP(values,6,0,0,7) = 0;
        MAP(values,6,0,1,0) = 0;
        MAP(values,6,0,1,1) = 0;
        MAP(values,6,0,1,2) = dz / static_cast<REAL>(24);
        MAP(values,6,0,1,3) = 0;
        MAP(values,6,0,1,4) = 0;
        MAP(values,6,0,1,5) = 0;
        MAP(values,6,0,1,6) = 0;
        MAP(values,6,0,1,7) = 0;
        MAP(values,6,0,2,0) = 0;
        MAP(values,6,0,2,1) = 0;
        MAP(values,6,0,2,2) = -dy / static_cast<REAL>(24);
        MAP(values,6,0,2,3) = 0;
        MAP(values,6,0,2,4) = 0;
        MAP(values,6,0,2,5) = 0;
        MAP(values,6,0,2,6) = 0;
        MAP(values,6,0,2,7) = 0;
        MAP(values,6,1,0,0) = 0;
        MAP(values,6,1,0,1) = 0;
        MAP(values,6,1,0,2) = dz / static_cast<REAL>(24);
        MAP(values,6,1,0,3) = 0;
        MAP(values,6,1,0,4) = 0;
        MAP(values,6,1,0,5) = 0;
        MAP(values,6,1,0,6) = 0;
        MAP(values,6,1,0,7) = 0;
        MAP(values,6,1,1,0) = 0;
        MAP(values,6,1,1,1) = 0;
        MAP(values,6,1,1,2) = -dz / dy * dx / static_cast<REAL>(36);
        MAP(values,6,1,1,3) = 0;
        MAP(values,6,1,1,4) = 0;
        MAP(values,6,1,1,5) = 0;
        MAP(values,6,1,1,6) = 0;
        MAP(values,6,1,1,7) = 0;
        MAP(values,6,1,2,0) = 0;
        MAP(values,6,1,2,1) = 0;
        MAP(values,6,1,2,2) = dx / static_cast<REAL>(24);
        MAP(values,6,1,2,3) = 0;
        MAP(values,6,1,2,4) = 0;
        MAP(values,6,1,2,5) = 0;
        MAP(values,6,1,2,6) = 0;
        MAP(values,6,1,2,7) = 0;
        MAP(values,6,2,0,0) = 0;
        MAP(values,6,2,0,1) = 0;
        MAP(values,6,2,0,2) = -dy / static_cast<REAL>(24);
        MAP(values,6,2,0,3) = 0;
        MAP(values,6,2,0,4) = 0;
        MAP(values,6,2,0,5) = 0;
        MAP(values,6,2,0,6) = 0;
        MAP(values,6,2,0,7) = 0;
        MAP(values,6,2,1,0) = 0;
        MAP(values,6,2,1,1) = 0;
        MAP(values,6,2,1,2) = dx / static_cast<REAL>(24);
        MAP(values,6,2,1,3) = 0;
        MAP(values,6,2,1,4) = 0;
        MAP(values,6,2,1,5) = 0;
        MAP(values,6,2,1,6) = 0;
        MAP(values,6,2,1,7) = 0;
        MAP(values,6,2,2,0) = 0;
        MAP(values,6,2,2,1) = 0;
        MAP(values,6,2,2,2) = -1 / dz * dy * dx / static_cast<REAL>(36);
        MAP(values,6,2,2,3) = 0;
        MAP(values,6,2,2,4) = 0;
        MAP(values,6,2,2,5) = 0;
        MAP(values,6,2,2,6) = 0;
        MAP(values,6,2,2,7) = 0;
        MAP(values,7,0,0,0) = 0;
        MAP(values,7,0,0,1) = 0;
        MAP(values,7,0,0,2) = dz * dy / dx / static_cast<REAL>(36);
        MAP(values,7,0,0,3) = dz * dy / dx / static_cast<REAL>(36);
        MAP(values,7,0,0,4) = 0;
        MAP(values,7,0,0,5) = 0;
        MAP(values,7,0,0,6) = 0;
        MAP(values,7,0,0,7) = 0;
        MAP(values,7,0,1,0) = 0;
        MAP(values,7,0,1,1) = 0;
        MAP(values,7,0,1,2) = -dz / static_cast<REAL>(24);
        MAP(values,7,0,1,3) = dz / static_cast<REAL>(24);
        MAP(values,7,0,1,4) = 0;
        MAP(values,7,0,1,5) = 0;
        MAP(values,7,0,1,6) = 0;
        MAP(values,7,0,1,7) = 0;
        MAP(values,7,0,2,0) = 0;
        MAP(values,7,0,2,1) = 0;
        MAP(values,7,0,2,2) = dy / static_cast<REAL>(24);
        MAP(values,7,0,2,3) = -dy / static_cast<REAL>(24);
        MAP(values,7,0,2,4) = 0;
        MAP(values,7,0,2,5) = 0;
        MAP(values,7,0,2,6) = 0;
        MAP(values,7,0,2,7) = 0;
        MAP(values,7,1,0,0) = 0;
        MAP(values,7,1,0,1) = 0;
        MAP(values,7,1,0,2) = dz / static_cast<REAL>(24);
        MAP(values,7,1,0,3) = -dz / static_cast<REAL>(24);
        MAP(values,7,1,0,4) = 0;
        MAP(values,7,1,0,5) = 0;
        MAP(values,7,1,0,6) = 0;
        MAP(values,7,1,0,7) = 0;
        MAP(values,7,1,1,0) = 0;
        MAP(values,7,1,1,1) = 0;
        MAP(values,7,1,1,2) = -dz / dy * dx / static_cast<REAL>(18);
        MAP(values,7,1,1,3) = -dz / dy * dx / static_cast<REAL>(18);
        MAP(values,7,1,1,4) = 0;
        MAP(values,7,1,1,5) = 0;
        MAP(values,7,1,1,6) = 0;
        MAP(values,7,1,1,7) = 0;
        MAP(values,7,1,2,0) = 0;
        MAP(values,7,1,2,1) = 0;
        MAP(values,7,1,2,2) = dx / static_cast<REAL>(12);
        MAP(values,7,1,2,3) = dx / static_cast<REAL>(12);
        MAP(values,7,1,2,4) = 0;
        MAP(values,7,1,2,5) = 0;
        MAP(values,7,1,2,6) = 0;
        MAP(values,7,1,2,7) = 0;
        MAP(values,7,2,0,0) = 0;
        MAP(values,7,2,0,1) = 0;
        MAP(values,7,2,0,2) = -dy / static_cast<REAL>(24);
        MAP(values,7,2,0,3) = dy / static_cast<REAL>(24);
        MAP(values,7,2,0,4) = 0;
        MAP(values,7,2,0,5) = 0;
        MAP(values,7,2,0,6) = 0;
        MAP(values,7,2,0,7) = 0;
        MAP(values,7,2,1,0) = 0;
        MAP(values,7,2,1,1) = 0;
        MAP(values,7,2,1,2) = dx / static_cast<REAL>(12);
        MAP(values,7,2,1,3) = dx / static_cast<REAL>(12);
        MAP(values,7,2,1,4) = 0;
        MAP(values,7,2,1,5) = 0;
        MAP(values,7,2,1,6) = 0;
        MAP(values,7,2,1,7) = 0;
        MAP(values,7,2,2,0) = 0;
        MAP(values,7,2,2,1) = 0;
        MAP(values,7,2,2,2) = -1 / dz * dy * dx / static_cast<REAL>(18);
        MAP(values,7,2,2,3) = -1 / dz * dy * dx / static_cast<REAL>(18);
        MAP(values,7,2,2,4) = 0;
        MAP(values,7,2,2,5) = 0;
        MAP(values,7,2,2,6) = 0;
        MAP(values,7,2,2,7) = 0;
        MAP(values,8,0,0,0) = 0;
        MAP(values,8,0,0,1) = 0;
        MAP(values,8,0,0,2) = 0;
        MAP(values,8,0,0,3) = -dz * dy / dx / static_cast<REAL>(36);
        MAP(values,8,0,0,4) = 0;
        MAP(values,8,0,0,5) = 0;
        MAP(values,8,0,0,6) = 0;
        MAP(values,8,0,0,7) = 0;
        MAP(values,8,0,1,0) = 0;
        MAP(values,8,0,1,1) = 0;
        MAP(values,8,0,1,2) = 0;
        MAP(values,8,0,1,3) = -dz / static_cast<REAL>(24);
        MAP(values,8,0,1,4) = 0;
        MAP(values,8,0,1,5) = 0;
        MAP(values,8,0,1,6) = 0;
        MAP(values,8,0,1,7) = 0;
        MAP(values,8,0,2,0) = 0;
        MAP(values,8,0,2,1) = 0;
        MAP(values,8,0,2,2) = 0;
        MAP(values,8,0,2,3) = dy / static_cast<REAL>(24);
        MAP(values,8,0,2,4) = 0;
        MAP(values,8,0,2,5) = 0;
        MAP(values,8,0,2,6) = 0;
        MAP(values,8,0,2,7) = 0;
        MAP(values,8,1,0,0) = 0;
        MAP(values,8,1,0,1) = 0;
        MAP(values,8,1,0,2) = 0;
        MAP(values,8,1,0,3) = -dz / static_cast<REAL>(24);
        MAP(values,8,1,0,4) = 0;
        MAP(values,8,1,0,5) = 0;
        MAP(values,8,1,0,6) = 0;
        MAP(values,8,1,0,7) = 0;
        MAP(values,8,1,1,0) = 0;
        MAP(values,8,1,1,1) = 0;
        MAP(values,8,1,1,2) = 0;
        MAP(values,8,1,1,3) = -dz / dy * dx / static_cast<REAL>(36);
        MAP(values,8,1,1,4) = 0;
        MAP(values,8,1,1,5) = 0;
        MAP(values,8,1,1,6) = 0;
        MAP(values,8,1,1,7) = 0;
        MAP(values,8,1,2,0) = 0;
        MAP(values,8,1,2,1) = 0;
        MAP(values,8,1,2,2) = 0;
        MAP(values,8,1,2,3) = dx / static_cast<REAL>(24);
        MAP(values,8,1,2,4) = 0;
        MAP(values,8,1,2,5) = 0;
        MAP(values,8,1,2,6) = 0;
        MAP(values,8,1,2,7) = 0;
        MAP(values,8,2,0,0) = 0;
        MAP(values,8,2,0,1) = 0;
        MAP(values,8,2,0,2) = 0;
        MAP(values,8,2,0,3) = dy / static_cast<REAL>(24);
        MAP(values,8,2,0,4) = 0;
        MAP(values,8,2,0,5) = 0;
        MAP(values,8,2,0,6) = 0;
        MAP(values,8,2,0,7) = 0;
        MAP(values,8,2,1,0) = 0;
        MAP(values,8,2,1,1) = 0;
        MAP(values,8,2,1,2) = 0;
        MAP(values,8,2,1,3) = dx / static_cast<REAL>(24);
        MAP(values,8,2,1,4) = 0;
        MAP(values,8,2,1,5) = 0;
        MAP(values,8,2,1,6) = 0;
        MAP(values,8,2,1,7) = 0;
        MAP(values,8,2,2,0) = 0;
        MAP(values,8,2,2,1) = 0;
        MAP(values,8,2,2,2) = 0;
        MAP(values,8,2,2,3) = -1 / dz * dy * dx / static_cast<REAL>(36);
        MAP(values,8,2,2,4) = 0;
        MAP(values,8,2,2,5) = 0;
        MAP(values,8,2,2,6) = 0;
        MAP(values,8,2,2,7) = 0;
        MAP(values,9,0,0,0) = -dz * dy / dx / static_cast<REAL>(18);
        MAP(values,9,0,0,1) = 0;
        MAP(values,9,0,0,2) = 0;
        MAP(values,9,0,0,3) = 0;
        MAP(values,9,0,0,4) = -dz * dy / dx / static_cast<REAL>(18);
        MAP(values,9,0,0,5) = 0;
        MAP(values,9,0,0,6) = 0;
        MAP(values,9,0,0,7) = 0;
        MAP(values,9,0,1,0) = -dz / static_cast<REAL>(12);
        MAP(values,9,0,1,1) = 0;
        MAP(values,9,0,1,2) = 0;
        MAP(values,9,0,1,3) = 0;
        MAP(values,9,0,1,4) = -dz / static_cast<REAL>(12);
        MAP(values,9,0,1,5) = 0;
        MAP(values,9,0,1,6) = 0;
        MAP(values,9,0,1,7) = 0;
        MAP(values,9,0,2,0) = -dy / static_cast<REAL>(24);
        MAP(values,9,0,2,1) = 0;
        MAP(values,9,0,2,2) = 0;
        MAP(values,9,0,2,3) = 0;
        MAP(values,9,0,2,4) = dy / static_cast<REAL>(24);
        MAP(values,9,0,2,5) = 0;
        MAP(values,9,0,2,6) = 0;
        MAP(values,9,0,2,7) = 0;
        MAP(values,9,1,0,0) = -dz / static_cast<REAL>(12);
        MAP(values,9,1,0,1) = 0;
        MAP(values,9,1,0,2) = 0;
        MAP(values,9,1,0,3) = 0;
        MAP(values,9,1,0,4) = -dz / static_cast<REAL>(12);
        MAP(values,9,1,0,5) = 0;
        MAP(values,9,1,0,6) = 0;
        MAP(values,9,1,0,7) = 0;
        MAP(values,9,1,1,0) = -dz / dy * dx / static_cast<REAL>(18);
        MAP(values,9,1,1,1) = 0;
        MAP(values,9,1,1,2) = 0;
        MAP(values,9,1,1,3) = 0;
        MAP(values,9,1,1,4) = -dz / dy * dx / static_cast<REAL>(18);
        MAP(values,9,1,1,5) = 0;
        MAP(values,9,1,1,6) = 0;
        MAP(values,9,1,1,7) = 0;
        MAP(values,9,1,2,0) = -dx / static_cast<REAL>(24);
        MAP(values,9,1,2,1) = 0;
        MAP(values,9,1,2,2) = 0;
        MAP(values,9,1,2,3) = 0;
        MAP(values,9,1,2,4) = dx / static_cast<REAL>(24);
        MAP(values,9,1,2,5) = 0;
        MAP(values,9,1,2,6) = 0;
        MAP(values,9,1,2,7) = 0;
        MAP(values,9,2,0,0) = dy / static_cast<REAL>(24);
        MAP(values,9,2,0,1) = 0;
        MAP(values,9,2,0,2) = 0;
        MAP(values,9,2,0,3) = 0;
        MAP(values,9,2,0,4) = -dy / static_cast<REAL>(24);
        MAP(values,9,2,0,5) = 0;
        MAP(values,9,2,0,6) = 0;
        MAP(values,9,2,0,7) = 0;
        MAP(values,9,2,1,0) = dx / static_cast<REAL>(24);
        MAP(values,9,2,1,1) = 0;
        MAP(values,9,2,1,2) = 0;
        MAP(values,9,2,1,3) = 0;
        MAP(values,9,2,1,4) = -dx / static_cast<REAL>(24);
        MAP(values,9,2,1,5) = 0;
        MAP(values,9,2,1,6) = 0;
        MAP(values,9,2,1,7) = 0;
        MAP(values,9,2,2,0) = 1 / dz * dy * dx / static_cast<REAL>(36);
        MAP(values,9,2,2,1) = 0;
        MAP(values,9,2,2,2) = 0;
        MAP(values,9,2,2,3) = 0;
        MAP(values,9,2,2,4) = 1 / dz * dy * dx / static_cast<REAL>(36);
        MAP(values,9,2,2,5) = 0;
        MAP(values,9,2,2,6) = 0;
        MAP(values,9,2,2,7) = 0;
        MAP(values,10,0,0,0) = dz * dy / dx / static_cast<REAL>(18);
        MAP(values,10,0,0,1) = dz * dy / dx / static_cast<REAL>(18);
        MAP(values,10,0,0,2) = 0;
        MAP(values,10,0,0,3) = 0;
        MAP(values,10,0,0,4) = dz * dy / dx / static_cast<REAL>(18);
        MAP(values,10,0,0,5) = dz * dy / dx / static_cast<REAL>(18);
        MAP(values,10,0,0,6) = 0;
        MAP(values,10,0,0,7) = 0;
        MAP(values,10,0,1,0) = dz / static_cast<REAL>(12);
        MAP(values,10,0,1,1) = -dz / static_cast<REAL>(12);
        MAP(values,10,0,1,2) = 0;
        MAP(values,10,0,1,3) = 0;
        MAP(values,10,0,1,4) = dz / static_cast<REAL>(12);
        MAP(values,10,0,1,5) = -dz / static_cast<REAL>(12);
        MAP(values,10,0,1,6) = 0;
        MAP(values,10,0,1,7) = 0;
        MAP(values,10,0,2,0) = dy / static_cast<REAL>(24);
        MAP(values,10,0,2,1) = -dy / static_cast<REAL>(24);
        MAP(values,10,0,2,2) = 0;
        MAP(values,10,0,2,3) = 0;
        MAP(values,10,0,2,4) = -dy / static_cast<REAL>(24);
        MAP(values,10,0,2,5) = dy / static_cast<REAL>(24);
        MAP(values,10,0,2,6) = 0;
        MAP(values,10,0,2,7) = 0;
        MAP(values,10,1,0,0) = -dz / static_cast<REAL>(12);
        MAP(values,10,1,0,1) = dz / static_cast<REAL>(12);
        MAP(values,10,1,0,2) = 0;
        MAP(values,10,1,0,3) = 0;
        MAP(values,10,1,0,4) = -dz / static_cast<REAL>(12);
        MAP(values,10,1,0,5) = dz / static_cast<REAL>(12);
        MAP(values,10,1,0,6) = 0;
        MAP(values,10,1,0,7) = 0;
        MAP(values,10,1,1,0) = -dz / dy * dx / static_cast<REAL>(9);
        MAP(values,10,1,1,1) = -dz / dy * dx / static_cast<REAL>(9);
        MAP(values,10,1,1,2) = 0;
        MAP(values,10,1,1,3) = 0;
        MAP(values,10,1,1,4) = -dz / dy * dx / static_cast<REAL>(9);
        MAP(values,10,1,1,5) = -dz / dy * dx / static_cast<REAL>(9);
        MAP(values,10,1,1,6) = 0;
        MAP(values,10,1,1,7) = 0;
        MAP(values,10,1,2,0) = -dx / static_cast<REAL>(12);
        MAP(values,10,1,2,1) = -dx / static_cast<REAL>(12);
        MAP(values,10,1,2,2) = 0;
        MAP(values,10,1,2,3) = 0;
        MAP(values,10,1,2,4) = dx / static_cast<REAL>(12);
        MAP(values,10,1,2,5) = dx / static_cast<REAL>(12);
        MAP(values,10,1,2,6) = 0;
        MAP(values,10,1,2,7) = 0;
        MAP(values,10,2,0,0) = dy / static_cast<REAL>(24);
        MAP(values,10,2,0,1) = -dy / static_cast<REAL>(24);
        MAP(values,10,2,0,2) = 0;
        MAP(values,10,2,0,3) = 0;
        MAP(values,10,2,0,4) = -dy / static_cast<REAL>(24);
        MAP(values,10,2,0,5) = dy / static_cast<REAL>(24);
        MAP(values,10,2,0,6) = 0;
        MAP(values,10,2,0,7) = 0;
        MAP(values,10,2,1,0) = dx / static_cast<REAL>(12);
        MAP(values,10,2,1,1) = dx / static_cast<REAL>(12);
        MAP(values,10,2,1,2) = 0;
        MAP(values,10,2,1,3) = 0;
        MAP(values,10,2,1,4) = -dx / static_cast<REAL>(12);
        MAP(values,10,2,1,5) = -dx / static_cast<REAL>(12);
        MAP(values,10,2,1,6) = 0;
        MAP(values,10,2,1,7) = 0;
        MAP(values,10,2,2,0) = 1 / dz * dy * dx / static_cast<REAL>(18);
        MAP(values,10,2,2,1) = 1 / dz * dy * dx / static_cast<REAL>(18);
        MAP(values,10,2,2,2) = 0;
        MAP(values,10,2,2,3) = 0;
        MAP(values,10,2,2,4) = 1 / dz * dy * dx / static_cast<REAL>(18);
        MAP(values,10,2,2,5) = 1 / dz * dy * dx / static_cast<REAL>(18);
        MAP(values,10,2,2,6) = 0;
        MAP(values,10,2,2,7) = 0;
        MAP(values,11,0,0,0) = 0;
        MAP(values,11,0,0,1) = -dz * dy / dx / static_cast<REAL>(18);
        MAP(values,11,0,0,2) = 0;
        MAP(values,11,0,0,3) = 0;
        MAP(values,11,0,0,4) = 0;
        MAP(values,11,0,0,5) = -dz * dy / dx / static_cast<REAL>(18);
        MAP(values,11,0,0,6) = 0;
        MAP(values,11,0,0,7) = 0;
        MAP(values,11,0,1,0) = 0;
        MAP(values,11,0,1,1) = dz / static_cast<REAL>(12);
        MAP(values,11,0,1,2) = 0;
        MAP(values,11,0,1,3) = 0;
        MAP(values,11,0,1,4) = 0;
        MAP(values,11,0,1,5) = dz / static_cast<REAL>(12);
        MAP(values,11,0,1,6) = 0;
        MAP(values,11,0,1,7) = 0;
        MAP(values,11,0,2,0) = 0;
        MAP(values,11,0,2,1) = dy / static_cast<REAL>(24);
        MAP(values,11,0,2,2) = 0;
        MAP(values,11,0,2,3) = 0;
        MAP(values,11,0,2,4) = 0;
        MAP(values,11,0,2,5) = -dy / static_cast<REAL>(24);
        MAP(values,11,0,2,6) = 0;
        MAP(values,11,0,2,7) = 0;
        MAP(values,11,1,0,0) = 0;
        MAP(values,11,1,0,1) = dz / static_cast<REAL>(12);
        MAP(values,11,1,0,2) = 0;
        MAP(values,11,1,0,3) = 0;
        MAP(values,11,1,0,4) = 0;
        MAP(values,11,1,0,5) = dz / static_cast<REAL>(12);
        MAP(values,11,1,0,6) = 0;
        MAP(values,11,1,0,7) = 0;
        MAP(values,11,1,1,0) = 0;
        MAP(values,11,1,1,1) = -dz / dy * dx / static_cast<REAL>(18);
        MAP(values,11,1,1,2) = 0;
        MAP(values,11,1,1,3) = 0;
        MAP(values,11,1,1,4) = 0;
        MAP(values,11,1,1,5) = -dz / dy * dx / static_cast<REAL>(18);
        MAP(values,11,1,1,6) = 0;
        MAP(values,11,1,1,7) = 0;
        MAP(values,11,1,2,0) = 0;
        MAP(values,11,1,2,1) = -dx / static_cast<REAL>(24);
        MAP(values,11,1,2,2) = 0;
        MAP(values,11,1,2,3) = 0;
        MAP(values,11,1,2,4) = 0;
        MAP(values,11,1,2,5) = dx / static_cast<REAL>(24);
        MAP(values,11,1,2,6) = 0;
        MAP(values,11,1,2,7) = 0;
        MAP(values,11,2,0,0) = 0;
        MAP(values,11,2,0,1) = -dy / static_cast<REAL>(24);
        MAP(values,11,2,0,2) = 0;
        MAP(values,11,2,0,3) = 0;
        MAP(values,11,2,0,4) = 0;
        MAP(values,11,2,0,5) = dy / static_cast<REAL>(24);
        MAP(values,11,2,0,6) = 0;
        MAP(values,11,2,0,7) = 0;
        MAP(values,11,2,1,0) = 0;
        MAP(values,11,2,1,1) = dx / static_cast<REAL>(24);
        MAP(values,11,2,1,2) = 0;
        MAP(values,11,2,1,3) = 0;
        MAP(values,11,2,1,4) = 0;
        MAP(values,11,2,1,5) = -dx / static_cast<REAL>(24);
        MAP(values,11,2,1,6) = 0;
        MAP(values,11,2,1,7) = 0;
        MAP(values,11,2,2,0) = 0;
        MAP(values,11,2,2,1) = 1 / dz * dy * dx / static_cast<REAL>(36);
        MAP(values,11,2,2,2) = 0;
        MAP(values,11,2,2,3) = 0;
        MAP(values,11,2,2,4) = 0;
        MAP(values,11,2,2,5) = 1 / dz * dy * dx / static_cast<REAL>(36);
        MAP(values,11,2,2,6) = 0;
        MAP(values,11,2,2,7) = 0;
        MAP(values,12,0,0,0) = -dz * dy / dx / static_cast<REAL>(9);
        MAP(values,12,0,0,1) = 0;
        MAP(values,12,0,0,2) = -dz * dy / dx / static_cast<REAL>(9);
        MAP(values,12,0,0,3) = 0;
        MAP(values,12,0,0,4) = -dz * dy / dx / static_cast<REAL>(9);
        MAP(values,12,0,0,5) = 0;
        MAP(values,12,0,0,6) = -dz * dy / dx / static_cast<REAL>(9);
        MAP(values,12,0,0,7) = 0;
        MAP(values,12,0,1,0) = -dz / static_cast<REAL>(12);
        MAP(values,12,0,1,1) = 0;
        MAP(values,12,0,1,2) = dz / static_cast<REAL>(12);
        MAP(values,12,0,1,3) = 0;
        MAP(values,12,0,1,4) = -dz / static_cast<REAL>(12);
        MAP(values,12,0,1,5) = 0;
        MAP(values,12,0,1,6) = dz / static_cast<REAL>(12);
        MAP(values,12,0,1,7) = 0;
        MAP(values,12,0,2,0) = -dy / static_cast<REAL>(12);
        MAP(values,12,0,2,1) = 0;
        MAP(values,12,0,2,2) = -dy / static_cast<REAL>(12);
        MAP(values,12,0,2,3) = 0;
        MAP(values,12,0,2,4) = dy / static_cast<REAL>(12);
        MAP(values,12,0,2,5) = 0;
        MAP(values,12,0,2,6) = dy / static_cast<REAL>(12);
        MAP(values,12,0,2,7) = 0;
        MAP(values,12,1,0,0) = dz / static_cast<REAL>(12);
        MAP(values,12,1,0,1) = 0;
        MAP(values,12,1,0,2) = -dz / static_cast<REAL>(12);
        MAP(values,12,1,0,3) = 0;
        MAP(values,12,1,0,4) = dz / static_cast<REAL>(12);
        MAP(values,12,1,0,5) = 0;
        MAP(values,12,1,0,6) = -dz / static_cast<REAL>(12);
        MAP(values,12,1,0,7) = 0;
        MAP(values,12,1,1,0) = dz / dy * dx / static_cast<REAL>(18);
        MAP(values,12,1,1,1) = 0;
        MAP(values,12,1,1,2) = dz / dy * dx / static_cast<REAL>(18);
        MAP(values,12,1,1,3) = 0;
        MAP(values,12,1,1,4) = dz / dy * dx / static_cast<REAL>(18);
        MAP(values,12,1,1,5) = 0;
        MAP(values,12,1,1,6) = dz / dy * dx / static_cast<REAL>(18);
        MAP(values,12,1,1,7) = 0;
        MAP(values,12,1,2,0) = dx / static_cast<REAL>(24);
        MAP(values,12,1,2,1) = 0;
        MAP(values,12,1,2,2) = -dx / static_cast<REAL>(24);
        MAP(values,12,1,2,3) = 0;
        MAP(values,12,1,2,4) = -dx / static_cast<REAL>(24);
        MAP(values,12,1,2,5) = 0;
        MAP(values,12,1,2,6) = dx / static_cast<REAL>(24);
        MAP(values,12,1,2,7) = 0;
        MAP(values,12,2,0,0) = dy / static_cast<REAL>(12);
        MAP(values,12,2,0,1) = 0;
        MAP(values,12,2,0,2) = dy / static_cast<REAL>(12);
        MAP(values,12,2,0,3) = 0;
        MAP(values,12,2,0,4) = -dy / static_cast<REAL>(12);
        MAP(values,12,2,0,5) = 0;
        MAP(values,12,2,0,6) = -dy / static_cast<REAL>(12);
        MAP(values,12,2,0,7) = 0;
        MAP(values,12,2,1,0) = dx / static_cast<REAL>(24);
        MAP(values,12,2,1,1) = 0;
        MAP(values,12,2,1,2) = -dx / static_cast<REAL>(24);
        MAP(values,12,2,1,3) = 0;
        MAP(values,12,2,1,4) = -dx / static_cast<REAL>(24);
        MAP(values,12,2,1,5) = 0;
        MAP(values,12,2,1,6) = dx / static_cast<REAL>(24);
        MAP(values,12,2,1,7) = 0;
        MAP(values,12,2,2,0) = 1 / dz * dy * dx / static_cast<REAL>(18);
        MAP(values,12,2,2,1) = 0;
        MAP(values,12,2,2,2) = 1 / dz * dy * dx / static_cast<REAL>(18);
        MAP(values,12,2,2,3) = 0;
        MAP(values,12,2,2,4) = 1 / dz * dy * dx / static_cast<REAL>(18);
        MAP(values,12,2,2,5) = 0;
        MAP(values,12,2,2,6) = 1 / dz * dy * dx / static_cast<REAL>(18);
        MAP(values,12,2,2,7) = 0;
        MAP(values,13,0,0,0) = dz * dy / dx / static_cast<REAL>(9);
        MAP(values,13,0,0,1) = dz * dy / dx / static_cast<REAL>(9);
        MAP(values,13,0,0,2) = dz * dy / dx / static_cast<REAL>(9);
        MAP(values,13,0,0,3) = dz * dy / dx / static_cast<REAL>(9);
        MAP(values,13,0,0,4) = dz * dy / dx / static_cast<REAL>(9);
        MAP(values,13,0,0,5) = dz * dy / dx / static_cast<REAL>(9);
        MAP(values,13,0,0,6) = dz * dy / dx / static_cast<REAL>(9);
        MAP(values,13,0,0,7) = dz * dy / dx / static_cast<REAL>(9);
        MAP(values,13,0,1,0) = dz / static_cast<REAL>(12);
        MAP(values,13,0,1,1) = -dz / static_cast<REAL>(12);
        MAP(values,13,0,1,2) = -dz / static_cast<REAL>(12);
        MAP(values,13,0,1,3) = dz / static_cast<REAL>(12);
        MAP(values,13,0,1,4) = dz / static_cast<REAL>(12);
        MAP(values,13,0,1,5) = -dz / static_cast<REAL>(12);
        MAP(values,13,0,1,6) = -dz / static_cast<REAL>(12);
        MAP(values,13,0,1,7) = dz / static_cast<REAL>(12);
        MAP(values,13,0,2,0) = dy / static_cast<REAL>(12);
        MAP(values,13,0,2,1) = -dy / static_cast<REAL>(12);
        MAP(values,13,0,2,2) = dy / static_cast<REAL>(12);
        MAP(values,13,0,2,3) = -dy / static_cast<REAL>(12);
        MAP(values,13,0,2,4) = -dy / static_cast<REAL>(12);
        MAP(values,13,0,2,5) = dy / static_cast<REAL>(12);
        MAP(values,13,0,2,6) = -dy / static_cast<REAL>(12);
        MAP(values,13,0,2,7) = dy / static_cast<REAL>(12);
        MAP(values,13,1,0,0) = dz / static_cast<REAL>(12);
        MAP(values,13,1,0,1) = -dz / static_cast<REAL>(12);
        MAP(values,13,1,0,2) = -dz / static_cast<REAL>(12);
        MAP(values,13,1,0,3) = dz / static_cast<REAL>(12);
        MAP(values,13,1,0,4) = dz / static_cast<REAL>(12);
        MAP(values,13,1,0,5) = -dz / static_cast<REAL>(12);
        MAP(values,13,1,0,6) = -dz / static_cast<REAL>(12);
        MAP(values,13,1,0,7) = dz / static_cast<REAL>(12);
        MAP(values,13,1,1,0) = dz / dy * dx / static_cast<REAL>(9);
        MAP(values,13,1,1,1) = dz / dy * dx / static_cast<REAL>(9);
        MAP(values,13,1,1,2) = dz / dy * dx / static_cast<REAL>(9);
        MAP(values,13,1,1,3) = dz / dy * dx / static_cast<REAL>(9);
        MAP(values,13,1,1,4) = dz / dy * dx / static_cast<REAL>(9);
        MAP(values,13,1,1,5) = dz / dy * dx / static_cast<REAL>(9);
        MAP(values,13,1,1,6) = dz / dy * dx / static_cast<REAL>(9);
        MAP(values,13,1,1,7) = dz / dy * dx / static_cast<REAL>(9);
        MAP(values,13,1,2,0) = dx / static_cast<REAL>(12);
        MAP(values,13,1,2,1) = dx / static_cast<REAL>(12);
        MAP(values,13,1,2,2) = -dx / static_cast<REAL>(12);
        MAP(values,13,1,2,3) = -dx / static_cast<REAL>(12);
        MAP(values,13,1,2,4) = -dx / static_cast<REAL>(12);
        MAP(values,13,1,2,5) = -dx / static_cast<REAL>(12);
        MAP(values,13,1,2,6) = dx / static_cast<REAL>(12);
        MAP(values,13,1,2,7) = dx / static_cast<REAL>(12);
        MAP(values,13,2,0,0) = dy / static_cast<REAL>(12);
        MAP(values,13,2,0,1) = -dy / static_cast<REAL>(12);
        MAP(values,13,2,0,2) = dy / static_cast<REAL>(12);
        MAP(values,13,2,0,3) = -dy / static_cast<REAL>(12);
        MAP(values,13,2,0,4) = -dy / static_cast<REAL>(12);
        MAP(values,13,2,0,5) = dy / static_cast<REAL>(12);
        MAP(values,13,2,0,6) = -dy / static_cast<REAL>(12);
        MAP(values,13,2,0,7) = dy / static_cast<REAL>(12);
        MAP(values,13,2,1,0) = dx / static_cast<REAL>(12);
        MAP(values,13,2,1,1) = dx / static_cast<REAL>(12);
        MAP(values,13,2,1,2) = -dx / static_cast<REAL>(12);
        MAP(values,13,2,1,3) = -dx / static_cast<REAL>(12);
        MAP(values,13,2,1,4) = -dx / static_cast<REAL>(12);
        MAP(values,13,2,1,5) = -dx / static_cast<REAL>(12);
        MAP(values,13,2,1,6) = dx / static_cast<REAL>(12);
        MAP(values,13,2,1,7) = dx / static_cast<REAL>(12);
        MAP(values,13,2,2,0) = 1 / dz * dy * dx / static_cast<REAL>(9);
        MAP(values,13,2,2,1) = 1 / dz * dy * dx / static_cast<REAL>(9);
        MAP(values,13,2,2,2) = 1 / dz * dy * dx / static_cast<REAL>(9);
        MAP(values,13,2,2,3) = 1 / dz * dy * dx / static_cast<REAL>(9);
        MAP(values,13,2,2,4) = 1 / dz * dy * dx / static_cast<REAL>(9);
        MAP(values,13,2,2,5) = 1 / dz * dy * dx / static_cast<REAL>(9);
        MAP(values,13,2,2,6) = 1 / dz * dy * dx / static_cast<REAL>(9);
        MAP(values,13,2,2,7) = 1 / dz * dy * dx / static_cast<REAL>(9);
        MAP(values,14,0,0,0) = 0;
        MAP(values,14,0,0,1) = -dz * dy / dx / static_cast<REAL>(9);
        MAP(values,14,0,0,2) = 0;
        MAP(values,14,0,0,3) = -dz * dy / dx / static_cast<REAL>(9);
        MAP(values,14,0,0,4) = 0;
        MAP(values,14,0,0,5) = -dz * dy / dx / static_cast<REAL>(9);
        MAP(values,14,0,0,6) = 0;
        MAP(values,14,0,0,7) = -dz * dy / dx / static_cast<REAL>(9);
        MAP(values,14,0,1,0) = 0;
        MAP(values,14,0,1,1) = dz / static_cast<REAL>(12);
        MAP(values,14,0,1,2) = 0;
        MAP(values,14,0,1,3) = -dz / static_cast<REAL>(12);
        MAP(values,14,0,1,4) = 0;
        MAP(values,14,0,1,5) = dz / static_cast<REAL>(12);
        MAP(values,14,0,1,6) = 0;
        MAP(values,14,0,1,7) = -dz / static_cast<REAL>(12);
        MAP(values,14,0,2,0) = 0;
        MAP(values,14,0,2,1) = dy / static_cast<REAL>(12);
        MAP(values,14,0,2,2) = 0;
        MAP(values,14,0,2,3) = dy / static_cast<REAL>(12);
        MAP(values,14,0,2,4) = 0;
        MAP(values,14,0,2,5) = -dy / static_cast<REAL>(12);
        MAP(values,14,0,2,6) = 0;
        MAP(values,14,0,2,7) = -dy / static_cast<REAL>(12);
        MAP(values,14,1,0,0) = 0;
        MAP(values,14,1,0,1) = -dz / static_cast<REAL>(12);
        MAP(values,14,1,0,2) = 0;
        MAP(values,14,1,0,3) = dz / static_cast<REAL>(12);
        MAP(values,14,1,0,4) = 0;
        MAP(values,14,1,0,5) = -dz / static_cast<REAL>(12);
        MAP(values,14,1,0,6) = 0;
        MAP(values,14,1,0,7) = dz / static_cast<REAL>(12);
        MAP(values,14,1,1,0) = 0;
        MAP(values,14,1,1,1) = dz / dy * dx / static_cast<REAL>(18);
        MAP(values,14,1,1,2) = 0;
        MAP(values,14,1,1,3) = dz / dy * dx / static_cast<REAL>(18);
        MAP(values,14,1,1,4) = 0;
        MAP(values,14,1,1,5) = dz / dy * dx / static_cast<REAL>(18);
        MAP(values,14,1,1,6) = 0;
        MAP(values,14,1,1,7) = dz / dy * dx / static_cast<REAL>(18);
        MAP(values,14,1,2,0) = 0;
        MAP(values,14,1,2,1) = dx / static_cast<REAL>(24);
        MAP(values,14,1,2,2) = 0;
        MAP(values,14,1,2,3) = -dx / static_cast<REAL>(24);
        MAP(values,14,1,2,4) = 0;
        MAP(values,14,1,2,5) = -dx / static_cast<REAL>(24);
        MAP(values,14,1,2,6) = 0;
        MAP(values,14,1,2,7) = dx / static_cast<REAL>(24);
        MAP(values,14,2,0,0) = 0;
        MAP(values,14,2,0,1) = -dy / static_cast<REAL>(12);
        MAP(values,14,2,0,2) = 0;
        MAP(values,14,2,0,3) = -dy / static_cast<REAL>(12);
        MAP(values,14,2,0,4) = 0;
        MAP(values,14,2,0,5) = dy / static_cast<REAL>(12);
        MAP(values,14,2,0,6) = 0;
        MAP(values,14,2,0,7) = dy / static_cast<REAL>(12);
        MAP(values,14,2,1,0) = 0;
        MAP(values,14,2,1,1) = dx / static_cast<REAL>(24);
        MAP(values,14,2,1,2) = 0;
        MAP(values,14,2,1,3) = -dx / static_cast<REAL>(24);
        MAP(values,14,2,1,4) = 0;
        MAP(values,14,2,1,5) = -dx / static_cast<REAL>(24);
        MAP(values,14,2,1,6) = 0;
        MAP(values,14,2,1,7) = dx / static_cast<REAL>(24);
        MAP(values,14,2,2,0) = 0;
        MAP(values,14,2,2,1) = 1 / dz * dy * dx / static_cast<REAL>(18);
        MAP(values,14,2,2,2) = 0;
        MAP(values,14,2,2,3) = 1 / dz * dy * dx / static_cast<REAL>(18);
        MAP(values,14,2,2,4) = 0;
        MAP(values,14,2,2,5) = 1 / dz * dy * dx / static_cast<REAL>(18);
        MAP(values,14,2,2,6) = 0;
        MAP(values,14,2,2,7) = 1 / dz * dy * dx / static_cast<REAL>(18);
        MAP(values,15,0,0,0) = 0;
        MAP(values,15,0,0,1) = 0;
        MAP(values,15,0,0,2) = -dz * dy / dx / static_cast<REAL>(18);
        MAP(values,15,0,0,3) = 0;
        MAP(values,15,0,0,4) = 0;
        MAP(values,15,0,0,5) = 0;
        MAP(values,15,0,0,6) = -dz * dy / dx / static_cast<REAL>(18);
        MAP(values,15,0,0,7) = 0;
        MAP(values,15,0,1,0) = 0;
        MAP(values,15,0,1,1) = 0;
        MAP(values,15,0,1,2) = dz / static_cast<REAL>(12);
        MAP(values,15,0,1,3) = 0;
        MAP(values,15,0,1,4) = 0;
        MAP(values,15,0,1,5) = 0;
        MAP(values,15,0,1,6) = dz / static_cast<REAL>(12);
        MAP(values,15,0,1,7) = 0;
        MAP(values,15,0,2,0) = 0;
        MAP(values,15,0,2,1) = 0;
        MAP(values,15,0,2,2) = -dy / static_cast<REAL>(24);
        MAP(values,15,0,2,3) = 0;
        MAP(values,15,0,2,4) = 0;
        MAP(values,15,0,2,5) = 0;
        MAP(values,15,0,2,6) = dy / static_cast<REAL>(24);
        MAP(values,15,0,2,7) = 0;
        MAP(values,15,1,0,0) = 0;
        MAP(values,15,1,0,1) = 0;
        MAP(values,15,1,0,2) = dz / static_cast<REAL>(12);
        MAP(values,15,1,0,3) = 0;
        MAP(values,15,1,0,4) = 0;
        MAP(values,15,1,0,5) = 0;
        MAP(values,15,1,0,6) = dz / static_cast<REAL>(12);
        MAP(values,15,1,0,7) = 0;
        MAP(values,15,1,1,0) = 0;
        MAP(values,15,1,1,1) = 0;
        MAP(values,15,1,1,2) = -dz / dy * dx / static_cast<REAL>(18);
        MAP(values,15,1,1,3) = 0;
        MAP(values,15,1,1,4) = 0;
        MAP(values,15,1,1,5) = 0;
        MAP(values,15,1,1,6) = -dz / dy * dx / static_cast<REAL>(18);
        MAP(values,15,1,1,7) = 0;
        MAP(values,15,1,2,0) = 0;
        MAP(values,15,1,2,1) = 0;
        MAP(values,15,1,2,2) = dx / static_cast<REAL>(24);
        MAP(values,15,1,2,3) = 0;
        MAP(values,15,1,2,4) = 0;
        MAP(values,15,1,2,5) = 0;
        MAP(values,15,1,2,6) = -dx / static_cast<REAL>(24);
        MAP(values,15,1,2,7) = 0;
        MAP(values,15,2,0,0) = 0;
        MAP(values,15,2,0,1) = 0;
        MAP(values,15,2,0,2) = dy / static_cast<REAL>(24);
        MAP(values,15,2,0,3) = 0;
        MAP(values,15,2,0,4) = 0;
        MAP(values,15,2,0,5) = 0;
        MAP(values,15,2,0,6) = -dy / static_cast<REAL>(24);
        MAP(values,15,2,0,7) = 0;
        MAP(values,15,2,1,0) = 0;
        MAP(values,15,2,1,1) = 0;
        MAP(values,15,2,1,2) = -dx / static_cast<REAL>(24);
        MAP(values,15,2,1,3) = 0;
        MAP(values,15,2,1,4) = 0;
        MAP(values,15,2,1,5) = 0;
        MAP(values,15,2,1,6) = dx / static_cast<REAL>(24);
        MAP(values,15,2,1,7) = 0;
        MAP(values,15,2,2,0) = 0;
        MAP(values,15,2,2,1) = 0;
        MAP(values,15,2,2,2) = 1 / dz * dy * dx / static_cast<REAL>(36);
        MAP(values,15,2,2,3) = 0;
        MAP(values,15,2,2,4) = 0;
        MAP(values,15,2,2,5) = 0;
        MAP(values,15,2,2,6) = 1 / dz * dy * dx / static_cast<REAL>(36);
        MAP(values,15,2,2,7) = 0;
        MAP(values,16,0,0,0) = 0;
        MAP(values,16,0,0,1) = 0;
        MAP(values,16,0,0,2) = dz * dy / dx / static_cast<REAL>(18);
        MAP(values,16,0,0,3) = dz * dy / dx / static_cast<REAL>(18);
        MAP(values,16,0,0,4) = 0;
        MAP(values,16,0,0,5) = 0;
        MAP(values,16,0,0,6) = dz * dy / dx / static_cast<REAL>(18);
        MAP(values,16,0,0,7) = dz * dy / dx / static_cast<REAL>(18);
        MAP(values,16,0,1,0) = 0;
        MAP(values,16,0,1,1) = 0;
        MAP(values,16,0,1,2) = -dz / static_cast<REAL>(12);
        MAP(values,16,0,1,3) = dz / static_cast<REAL>(12);
        MAP(values,16,0,1,4) = 0;
        MAP(values,16,0,1,5) = 0;
        MAP(values,16,0,1,6) = -dz / static_cast<REAL>(12);
        MAP(values,16,0,1,7) = dz / static_cast<REAL>(12);
        MAP(values,16,0,2,0) = 0;
        MAP(values,16,0,2,1) = 0;
        MAP(values,16,0,2,2) = dy / static_cast<REAL>(24);
        MAP(values,16,0,2,3) = -dy / static_cast<REAL>(24);
        MAP(values,16,0,2,4) = 0;
        MAP(values,16,0,2,5) = 0;
        MAP(values,16,0,2,6) = -dy / static_cast<REAL>(24);
        MAP(values,16,0,2,7) = dy / static_cast<REAL>(24);
        MAP(values,16,1,0,0) = 0;
        MAP(values,16,1,0,1) = 0;
        MAP(values,16,1,0,2) = dz / static_cast<REAL>(12);
        MAP(values,16,1,0,3) = -dz / static_cast<REAL>(12);
        MAP(values,16,1,0,4) = 0;
        MAP(values,16,1,0,5) = 0;
        MAP(values,16,1,0,6) = dz / static_cast<REAL>(12);
        MAP(values,16,1,0,7) = -dz / static_cast<REAL>(12);
        MAP(values,16,1,1,0) = 0;
        MAP(values,16,1,1,1) = 0;
        MAP(values,16,1,1,2) = -dz / dy * dx / static_cast<REAL>(9);
        MAP(values,16,1,1,3) = -dz / dy * dx / static_cast<REAL>(9);
        MAP(values,16,1,1,4) = 0;
        MAP(values,16,1,1,5) = 0;
        MAP(values,16,1,1,6) = -dz / dy * dx / static_cast<REAL>(9);
        MAP(values,16,1,1,7) = -dz / dy * dx / static_cast<REAL>(9);
        MAP(values,16,1,2,0) = 0;
        MAP(values,16,1,2,1) = 0;
        MAP(values,16,1,2,2) = dx / static_cast<REAL>(12);
        MAP(values,16,1,2,3) = dx / static_cast<REAL>(12);
        MAP(values,16,1,2,4) = 0;
        MAP(values,16,1,2,5) = 0;
        MAP(values,16,1,2,6) = -dx / static_cast<REAL>(12);
        MAP(values,16,1,2,7) = -dx / static_cast<REAL>(12);
        MAP(values,16,2,0,0) = 0;
        MAP(values,16,2,0,1) = 0;
        MAP(values,16,2,0,2) = dy / static_cast<REAL>(24);
        MAP(values,16,2,0,3) = -dy / static_cast<REAL>(24);
        MAP(values,16,2,0,4) = 0;
        MAP(values,16,2,0,5) = 0;
        MAP(values,16,2,0,6) = -dy / static_cast<REAL>(24);
        MAP(values,16,2,0,7) = dy / static_cast<REAL>(24);
        MAP(values,16,2,1,0) = 0;
        MAP(values,16,2,1,1) = 0;
        MAP(values,16,2,1,2) = -dx / static_cast<REAL>(12);
        MAP(values,16,2,1,3) = -dx / static_cast<REAL>(12);
        MAP(values,16,2,1,4) = 0;
        MAP(values,16,2,1,5) = 0;
        MAP(values,16,2,1,6) = dx / static_cast<REAL>(12);
        MAP(values,16,2,1,7) = dx / static_cast<REAL>(12);
        MAP(values,16,2,2,0) = 0;
        MAP(values,16,2,2,1) = 0;
        MAP(values,16,2,2,2) = 1 / dz * dy * dx / static_cast<REAL>(18);
        MAP(values,16,2,2,3) = 1 / dz * dy * dx / static_cast<REAL>(18);
        MAP(values,16,2,2,4) = 0;
        MAP(values,16,2,2,5) = 0;
        MAP(values,16,2,2,6) = 1 / dz * dy * dx / static_cast<REAL>(18);
        MAP(values,16,2,2,7) = 1 / dz * dy * dx / static_cast<REAL>(18);
        MAP(values,17,0,0,0) = 0;
        MAP(values,17,0,0,1) = 0;
        MAP(values,17,0,0,2) = 0;
        MAP(values,17,0,0,3) = -dz * dy / dx / static_cast<REAL>(18);
        MAP(values,17,0,0,4) = 0;
        MAP(values,17,0,0,5) = 0;
        MAP(values,17,0,0,6) = 0;
        MAP(values,17,0,0,7) = -dz * dy / dx / static_cast<REAL>(18);
        MAP(values,17,0,1,0) = 0;
        MAP(values,17,0,1,1) = 0;
        MAP(values,17,0,1,2) = 0;
        MAP(values,17,0,1,3) = -dz / static_cast<REAL>(12);
        MAP(values,17,0,1,4) = 0;
        MAP(values,17,0,1,5) = 0;
        MAP(values,17,0,1,6) = 0;
        MAP(values,17,0,1,7) = -dz / static_cast<REAL>(12);
        MAP(values,17,0,2,0) = 0;
        MAP(values,17,0,2,1) = 0;
        MAP(values,17,0,2,2) = 0;
        MAP(values,17,0,2,3) = dy / static_cast<REAL>(24);
        MAP(values,17,0,2,4) = 0;
        MAP(values,17,0,2,5) = 0;
        MAP(values,17,0,2,6) = 0;
        MAP(values,17,0,2,7) = -dy / static_cast<REAL>(24);
        MAP(values,17,1,0,0) = 0;
        MAP(values,17,1,0,1) = 0;
        MAP(values,17,1,0,2) = 0;
        MAP(values,17,1,0,3) = -dz / static_cast<REAL>(12);
        MAP(values,17,1,0,4) = 0;
        MAP(values,17,1,0,5) = 0;
        MAP(values,17,1,0,6) = 0;
        MAP(values,17,1,0,7) = -dz / static_cast<REAL>(12);
        MAP(values,17,1,1,0) = 0;
        MAP(values,17,1,1,1) = 0;
        MAP(values,17,1,1,2) = 0;
        MAP(values,17,1,1,3) = -dz / dy * dx / static_cast<REAL>(18);
        MAP(values,17,1,1,4) = 0;
        MAP(values,17,1,1,5) = 0;
        MAP(values,17,1,1,6) = 0;
        MAP(values,17,1,1,7) = -dz / dy * dx / static_cast<REAL>(18);
        MAP(values,17,1,2,0) = 0;
        MAP(values,17,1,2,1) = 0;
        MAP(values,17,1,2,2) = 0;
        MAP(values,17,1,2,3) = dx / static_cast<REAL>(24);
        MAP(values,17,1,2,4) = 0;
        MAP(values,17,1,2,5) = 0;
        MAP(values,17,1,2,6) = 0;
        MAP(values,17,1,2,7) = -dx / static_cast<REAL>(24);
        MAP(values,17,2,0,0) = 0;
        MAP(values,17,2,0,1) = 0;
        MAP(values,17,2,0,2) = 0;
        MAP(values,17,2,0,3) = -dy / static_cast<REAL>(24);
        MAP(values,17,2,0,4) = 0;
        MAP(values,17,2,0,5) = 0;
        MAP(values,17,2,0,6) = 0;
        MAP(values,17,2,0,7) = dy / static_cast<REAL>(24);
        MAP(values,17,2,1,0) = 0;
        MAP(values,17,2,1,1) = 0;
        MAP(values,17,2,1,2) = 0;
        MAP(values,17,2,1,3) = -dx / static_cast<REAL>(24);
        MAP(values,17,2,1,4) = 0;
        MAP(values,17,2,1,5) = 0;
        MAP(values,17,2,1,6) = 0;
        MAP(values,17,2,1,7) = dx / static_cast<REAL>(24);
        MAP(values,17,2,2,0) = 0;
        MAP(values,17,2,2,1) = 0;
        MAP(values,17,2,2,2) = 0;
        MAP(values,17,2,2,3) = 1 / dz * dy * dx / static_cast<REAL>(36);
        MAP(values,17,2,2,4) = 0;
        MAP(values,17,2,2,5) = 0;
        MAP(values,17,2,2,6) = 0;
        MAP(values,17,2,2,7) = 1 / dz * dy * dx / static_cast<REAL>(36);
        MAP(values,18,0,0,0) = 0;
        MAP(values,18,0,0,1) = 0;
        MAP(values,18,0,0,2) = 0;
        MAP(values,18,0,0,3) = 0;
        MAP(values,18,0,0,4) = -dz * dy / dx / static_cast<REAL>(36);
        MAP(values,18,0,0,5) = 0;
        MAP(values,18,0,0,6) = 0;
        MAP(values,18,0,0,7) = 0;
        MAP(values,18,0,1,0) = 0;
        MAP(values,18,0,1,1) = 0;
        MAP(values,18,0,1,2) = 0;
        MAP(values,18,0,1,3) = 0;
        MAP(values,18,0,1,4) = -dz / static_cast<REAL>(24);
        MAP(values,18,0,1,5) = 0;
        MAP(values,18,0,1,6) = 0;
        MAP(values,18,0,1,7) = 0;
        MAP(values,18,0,2,0) = 0;
        MAP(values,18,0,2,1) = 0;
        MAP(values,18,0,2,2) = 0;
        MAP(values,18,0,2,3) = 0;
        MAP(values,18,0,2,4) = dy / static_cast<REAL>(24);
        MAP(values,18,0,2,5) = 0;
        MAP(values,18,0,2,6) = 0;
        MAP(values,18,0,2,7) = 0;
        MAP(values,18,1,0,0) = 0;
        MAP(values,18,1,0,1) = 0;
        MAP(values,18,1,0,2) = 0;
        MAP(values,18,1,0,3) = 0;
        MAP(values,18,1,0,4) = -dz / static_cast<REAL>(24);
        MAP(values,18,1,0,5) = 0;
        MAP(values,18,1,0,6) = 0;
        MAP(values,18,1,0,7) = 0;
        MAP(values,18,1,1,0) = 0;
        MAP(values,18,1,1,1) = 0;
        MAP(values,18,1,1,2) = 0;
        MAP(values,18,1,1,3) = 0;
        MAP(values,18,1,1,4) = -dz / dy * dx / static_cast<REAL>(36);
        MAP(values,18,1,1,5) = 0;
        MAP(values,18,1,1,6) = 0;
        MAP(values,18,1,1,7) = 0;
        MAP(values,18,1,2,0) = 0;
        MAP(values,18,1,2,1) = 0;
        MAP(values,18,1,2,2) = 0;
        MAP(values,18,1,2,3) = 0;
        MAP(values,18,1,2,4) = dx / static_cast<REAL>(24);
        MAP(values,18,1,2,5) = 0;
        MAP(values,18,1,2,6) = 0;
        MAP(values,18,1,2,7) = 0;
        MAP(values,18,2,0,0) = 0;
        MAP(values,18,2,0,1) = 0;
        MAP(values,18,2,0,2) = 0;
        MAP(values,18,2,0,3) = 0;
        MAP(values,18,2,0,4) = dy / static_cast<REAL>(24);
        MAP(values,18,2,0,5) = 0;
        MAP(values,18,2,0,6) = 0;
        MAP(values,18,2,0,7) = 0;
        MAP(values,18,2,1,0) = 0;
        MAP(values,18,2,1,1) = 0;
        MAP(values,18,2,1,2) = 0;
        MAP(values,18,2,1,3) = 0;
        MAP(values,18,2,1,4) = dx / static_cast<REAL>(24);
        MAP(values,18,2,1,5) = 0;
        MAP(values,18,2,1,6) = 0;
        MAP(values,18,2,1,7) = 0;
        MAP(values,18,2,2,0) = 0;
        MAP(values,18,2,2,1) = 0;
        MAP(values,18,2,2,2) = 0;
        MAP(values,18,2,2,3) = 0;
        MAP(values,18,2,2,4) = -1 / dz * dy * dx / static_cast<REAL>(36);
        MAP(values,18,2,2,5) = 0;
        MAP(values,18,2,2,6) = 0;
        MAP(values,18,2,2,7) = 0;
        MAP(values,19,0,0,0) = 0;
        MAP(values,19,0,0,1) = 0;
        MAP(values,19,0,0,2) = 0;
        MAP(values,19,0,0,3) = 0;
        MAP(values,19,0,0,4) = dz * dy / dx / static_cast<REAL>(36);
        MAP(values,19,0,0,5) = dz * dy / dx / static_cast<REAL>(36);
        MAP(values,19,0,0,6) = 0;
        MAP(values,19,0,0,7) = 0;
        MAP(values,19,0,1,0) = 0;
        MAP(values,19,0,1,1) = 0;
        MAP(values,19,0,1,2) = 0;
        MAP(values,19,0,1,3) = 0;
        MAP(values,19,0,1,4) = dz / static_cast<REAL>(24);
        MAP(values,19,0,1,5) = -dz / static_cast<REAL>(24);
        MAP(values,19,0,1,6) = 0;
        MAP(values,19,0,1,7) = 0;
        MAP(values,19,0,2,0) = 0;
        MAP(values,19,0,2,1) = 0;
        MAP(values,19,0,2,2) = 0;
        MAP(values,19,0,2,3) = 0;
        MAP(values,19,0,2,4) = -dy / static_cast<REAL>(24);
        MAP(values,19,0,2,5) = dy / static_cast<REAL>(24);
        MAP(values,19,0,2,6) = 0;
        MAP(values,19,0,2,7) = 0;
        MAP(values,19,1,0,0) = 0;
        MAP(values,19,1,0,1) = 0;
        MAP(values,19,1,0,2) = 0;
        MAP(values,19,1,0,3) = 0;
        MAP(values,19,1,0,4) = -dz / static_cast<REAL>(24);
        MAP(values,19,1,0,5) = dz / static_cast<REAL>(24);
        MAP(values,19,1,0,6) = 0;
        MAP(values,19,1,0,7) = 0;
        MAP(values,19,1,1,0) = 0;
        MAP(values,19,1,1,1) = 0;
        MAP(values,19,1,1,2) = 0;
        MAP(values,19,1,1,3) = 0;
        MAP(values,19,1,1,4) = -dz / dy * dx / static_cast<REAL>(18);
        MAP(values,19,1,1,5) = -dz / dy * dx / static_cast<REAL>(18);
        MAP(values,19,1,1,6) = 0;
        MAP(values,19,1,1,7) = 0;
        MAP(values,19,1,2,0) = 0;
        MAP(values,19,1,2,1) = 0;
        MAP(values,19,1,2,2) = 0;
        MAP(values,19,1,2,3) = 0;
        MAP(values,19,1,2,4) = dx / static_cast<REAL>(12);
        MAP(values,19,1,2,5) = dx / static_cast<REAL>(12);
        MAP(values,19,1,2,6) = 0;
        MAP(values,19,1,2,7) = 0;
        MAP(values,19,2,0,0) = 0;
        MAP(values,19,2,0,1) = 0;
        MAP(values,19,2,0,2) = 0;
        MAP(values,19,2,0,3) = 0;
        MAP(values,19,2,0,4) = dy / static_cast<REAL>(24);
        MAP(values,19,2,0,5) = -dy / static_cast<REAL>(24);
        MAP(values,19,2,0,6) = 0;
        MAP(values,19,2,0,7) = 0;
        MAP(values,19,2,1,0) = 0;
        MAP(values,19,2,1,1) = 0;
        MAP(values,19,2,1,2) = 0;
        MAP(values,19,2,1,3) = 0;
        MAP(values,19,2,1,4) = dx / static_cast<REAL>(12);
        MAP(values,19,2,1,5) = dx / static_cast<REAL>(12);
        MAP(values,19,2,1,6) = 0;
        MAP(values,19,2,1,7) = 0;
        MAP(values,19,2,2,0) = 0;
        MAP(values,19,2,2,1) = 0;
        MAP(values,19,2,2,2) = 0;
        MAP(values,19,2,2,3) = 0;
        MAP(values,19,2,2,4) = -1 / dz * dy * dx / static_cast<REAL>(18);
        MAP(values,19,2,2,5) = -1 / dz * dy * dx / static_cast<REAL>(18);
        MAP(values,19,2,2,6) = 0;
        MAP(values,19,2,2,7) = 0;
        MAP(values,20,0,0,0) = 0;
        MAP(values,20,0,0,1) = 0;
        MAP(values,20,0,0,2) = 0;
        MAP(values,20,0,0,3) = 0;
        MAP(values,20,0,0,4) = 0;
        MAP(values,20,0,0,5) = -dz * dy / dx / static_cast<REAL>(36);
        MAP(values,20,0,0,6) = 0;
        MAP(values,20,0,0,7) = 0;
        MAP(values,20,0,1,0) = 0;
        MAP(values,20,0,1,1) = 0;
        MAP(values,20,0,1,2) = 0;
        MAP(values,20,0,1,3) = 0;
        MAP(values,20,0,1,4) = 0;
        MAP(values,20,0,1,5) = dz / static_cast<REAL>(24);
        MAP(values,20,0,1,6) = 0;
        MAP(values,20,0,1,7) = 0;
        MAP(values,20,0,2,0) = 0;
        MAP(values,20,0,2,1) = 0;
        MAP(values,20,0,2,2) = 0;
        MAP(values,20,0,2,3) = 0;
        MAP(values,20,0,2,4) = 0;
        MAP(values,20,0,2,5) = -dy / static_cast<REAL>(24);
        MAP(values,20,0,2,6) = 0;
        MAP(values,20,0,2,7) = 0;
        MAP(values,20,1,0,0) = 0;
        MAP(values,20,1,0,1) = 0;
        MAP(values,20,1,0,2) = 0;
        MAP(values,20,1,0,3) = 0;
        MAP(values,20,1,0,4) = 0;
        MAP(values,20,1,0,5) = dz / static_cast<REAL>(24);
        MAP(values,20,1,0,6) = 0;
        MAP(values,20,1,0,7) = 0;
        MAP(values,20,1,1,0) = 0;
        MAP(values,20,1,1,1) = 0;
        MAP(values,20,1,1,2) = 0;
        MAP(values,20,1,1,3) = 0;
        MAP(values,20,1,1,4) = 0;
        MAP(values,20,1,1,5) = -dz / dy * dx / static_cast<REAL>(36);
        MAP(values,20,1,1,6) = 0;
        MAP(values,20,1,1,7) = 0;
        MAP(values,20,1,2,0) = 0;
        MAP(values,20,1,2,1) = 0;
        MAP(values,20,1,2,2) = 0;
        MAP(values,20,1,2,3) = 0;
        MAP(values,20,1,2,4) = 0;
        MAP(values,20,1,2,5) = dx / static_cast<REAL>(24);
        MAP(values,20,1,2,6) = 0;
        MAP(values,20,1,2,7) = 0;
        MAP(values,20,2,0,0) = 0;
        MAP(values,20,2,0,1) = 0;
        MAP(values,20,2,0,2) = 0;
        MAP(values,20,2,0,3) = 0;
        MAP(values,20,2,0,4) = 0;
        MAP(values,20,2,0,5) = -dy / static_cast<REAL>(24);
        MAP(values,20,2,0,6) = 0;
        MAP(values,20,2,0,7) = 0;
        MAP(values,20,2,1,0) = 0;
        MAP(values,20,2,1,1) = 0;
        MAP(values,20,2,1,2) = 0;
        MAP(values,20,2,1,3) = 0;
        MAP(values,20,2,1,4) = 0;
        MAP(values,20,2,1,5) = dx / static_cast<REAL>(24);
        MAP(values,20,2,1,6) = 0;
        MAP(values,20,2,1,7) = 0;
        MAP(values,20,2,2,0) = 0;
        MAP(values,20,2,2,1) = 0;
        MAP(values,20,2,2,2) = 0;
        MAP(values,20,2,2,3) = 0;
        MAP(values,20,2,2,4) = 0;
        MAP(values,20,2,2,5) = -1 / dz * dy * dx / static_cast<REAL>(36);
        MAP(values,20,2,2,6) = 0;
        MAP(values,20,2,2,7) = 0;
        MAP(values,21,0,0,0) = 0;
        MAP(values,21,0,0,1) = 0;
        MAP(values,21,0,0,2) = 0;
        MAP(values,21,0,0,3) = 0;
        MAP(values,21,0,0,4) = -dz * dy / dx / static_cast<REAL>(18);
        MAP(values,21,0,0,5) = 0;
        MAP(values,21,0,0,6) = -dz * dy / dx / static_cast<REAL>(18);
        MAP(values,21,0,0,7) = 0;
        MAP(values,21,0,1,0) = 0;
        MAP(values,21,0,1,1) = 0;
        MAP(values,21,0,1,2) = 0;
        MAP(values,21,0,1,3) = 0;
        MAP(values,21,0,1,4) = -dz / static_cast<REAL>(24);
        MAP(values,21,0,1,5) = 0;
        MAP(values,21,0,1,6) = dz / static_cast<REAL>(24);
        MAP(values,21,0,1,7) = 0;
        MAP(values,21,0,2,0) = 0;
        MAP(values,21,0,2,1) = 0;
        MAP(values,21,0,2,2) = 0;
        MAP(values,21,0,2,3) = 0;
        MAP(values,21,0,2,4) = dy / static_cast<REAL>(12);
        MAP(values,21,0,2,5) = 0;
        MAP(values,21,0,2,6) = dy / static_cast<REAL>(12);
        MAP(values,21,0,2,7) = 0;
        MAP(values,21,1,0,0) = 0;
        MAP(values,21,1,0,1) = 0;
        MAP(values,21,1,0,2) = 0;
        MAP(values,21,1,0,3) = 0;
        MAP(values,21,1,0,4) = dz / static_cast<REAL>(24);
        MAP(values,21,1,0,5) = 0;
        MAP(values,21,1,0,6) = -dz / static_cast<REAL>(24);
        MAP(values,21,1,0,7) = 0;
        MAP(values,21,1,1,0) = 0;
        MAP(values,21,1,1,1) = 0;
        MAP(values,21,1,1,2) = 0;
        MAP(values,21,1,1,3) = 0;
        MAP(values,21,1,1,4) = dz / dy * dx / static_cast<REAL>(36);
        MAP(values,21,1,1,5) = 0;
        MAP(values,21,1,1,6) = dz / dy * dx / static_cast<REAL>(36);
        MAP(values,21,1,1,7) = 0;
        MAP(values,21,1,2,0) = 0;
        MAP(values,21,1,2,1) = 0;
        MAP(values,21,1,2,2) = 0;
        MAP(values,21,1,2,3) = 0;
        MAP(values,21,1,2,4) = -dx / static_cast<REAL>(24);
        MAP(values,21,1,2,5) = 0;
        MAP(values,21,1,2,6) = dx / static_cast<REAL>(24);
        MAP(values,21,1,2,7) = 0;
        MAP(values,21,2,0,0) = 0;
        MAP(values,21,2,0,1) = 0;
        MAP(values,21,2,0,2) = 0;
        MAP(values,21,2,0,3) = 0;
        MAP(values,21,2,0,4) = dy / static_cast<REAL>(12);
        MAP(values,21,2,0,5) = 0;
        MAP(values,21,2,0,6) = dy / static_cast<REAL>(12);
        MAP(values,21,2,0,7) = 0;
        MAP(values,21,2,1,0) = 0;
        MAP(values,21,2,1,1) = 0;
        MAP(values,21,2,1,2) = 0;
        MAP(values,21,2,1,3) = 0;
        MAP(values,21,2,1,4) = dx / static_cast<REAL>(24);
        MAP(values,21,2,1,5) = 0;
        MAP(values,21,2,1,6) = -dx / static_cast<REAL>(24);
        MAP(values,21,2,1,7) = 0;
        MAP(values,21,2,2,0) = 0;
        MAP(values,21,2,2,1) = 0;
        MAP(values,21,2,2,2) = 0;
        MAP(values,21,2,2,3) = 0;
        MAP(values,21,2,2,4) = -1 / dz * dy * dx / static_cast<REAL>(18);
        MAP(values,21,2,2,5) = 0;
        MAP(values,21,2,2,6) = -1 / dz * dy * dx / static_cast<REAL>(18);
        MAP(values,21,2,2,7) = 0;
        MAP(values,22,0,0,0) = 0;
        MAP(values,22,0,0,1) = 0;
        MAP(values,22,0,0,2) = 0;
        MAP(values,22,0,0,3) = 0;
        MAP(values,22,0,0,4) = dz * dy / dx / static_cast<REAL>(18);
        MAP(values,22,0,0,5) = dz * dy / dx / static_cast<REAL>(18);
        MAP(values,22,0,0,6) = dz * dy / dx / static_cast<REAL>(18);
        MAP(values,22,0,0,7) = dz * dy / dx / static_cast<REAL>(18);
        MAP(values,22,0,1,0) = 0;
        MAP(values,22,0,1,1) = 0;
        MAP(values,22,0,1,2) = 0;
        MAP(values,22,0,1,3) = 0;
        MAP(values,22,0,1,4) = dz / static_cast<REAL>(24);
        MAP(values,22,0,1,5) = -dz / static_cast<REAL>(24);
        MAP(values,22,0,1,6) = -dz / static_cast<REAL>(24);
        MAP(values,22,0,1,7) = dz / static_cast<REAL>(24);
        MAP(values,22,0,2,0) = 0;
        MAP(values,22,0,2,1) = 0;
        MAP(values,22,0,2,2) = 0;
        MAP(values,22,0,2,3) = 0;
        MAP(values,22,0,2,4) = -dy / static_cast<REAL>(12);
        MAP(values,22,0,2,5) = dy / static_cast<REAL>(12);
        MAP(values,22,0,2,6) = -dy / static_cast<REAL>(12);
        MAP(values,22,0,2,7) = dy / static_cast<REAL>(12);
        MAP(values,22,1,0,0) = 0;
        MAP(values,22,1,0,1) = 0;
        MAP(values,22,1,0,2) = 0;
        MAP(values,22,1,0,3) = 0;
        MAP(values,22,1,0,4) = dz / static_cast<REAL>(24);
        MAP(values,22,1,0,5) = -dz / static_cast<REAL>(24);
        MAP(values,22,1,0,6) = -dz / static_cast<REAL>(24);
        MAP(values,22,1,0,7) = dz / static_cast<REAL>(24);
        MAP(values,22,1,1,0) = 0;
        MAP(values,22,1,1,1) = 0;
        MAP(values,22,1,1,2) = 0;
        MAP(values,22,1,1,3) = 0;
        MAP(values,22,1,1,4) = dz / dy * dx / static_cast<REAL>(18);
        MAP(values,22,1,1,5) = dz / dy * dx / static_cast<REAL>(18);
        MAP(values,22,1,1,6) = dz / dy * dx / static_cast<REAL>(18);
        MAP(values,22,1,1,7) = dz / dy * dx / static_cast<REAL>(18);
        MAP(values,22,1,2,0) = 0;
        MAP(values,22,1,2,1) = 0;
        MAP(values,22,1,2,2) = 0;
        MAP(values,22,1,2,3) = 0;
        MAP(values,22,1,2,4) = -dx / static_cast<REAL>(12);
        MAP(values,22,1,2,5) = -dx / static_cast<REAL>(12);
        MAP(values,22,1,2,6) = dx / static_cast<REAL>(12);
        MAP(values,22,1,2,7) = dx / static_cast<REAL>(12);
        MAP(values,22,2,0,0) = 0;
        MAP(values,22,2,0,1) = 0;
        MAP(values,22,2,0,2) = 0;
        MAP(values,22,2,0,3) = 0;
        MAP(values,22,2,0,4) = dy / static_cast<REAL>(12);
        MAP(values,22,2,0,5) = -dy / static_cast<REAL>(12);
        MAP(values,22,2,0,6) = dy / static_cast<REAL>(12);
        MAP(values,22,2,0,7) = -dy / static_cast<REAL>(12);
        MAP(values,22,2,1,0) = 0;
        MAP(values,22,2,1,1) = 0;
        MAP(values,22,2,1,2) = 0;
        MAP(values,22,2,1,3) = 0;
        MAP(values,22,2,1,4) = dx / static_cast<REAL>(12);
        MAP(values,22,2,1,5) = dx / static_cast<REAL>(12);
        MAP(values,22,2,1,6) = -dx / static_cast<REAL>(12);
        MAP(values,22,2,1,7) = -dx / static_cast<REAL>(12);
        MAP(values,22,2,2,0) = 0;
        MAP(values,22,2,2,1) = 0;
        MAP(values,22,2,2,2) = 0;
        MAP(values,22,2,2,3) = 0;
        MAP(values,22,2,2,4) = -1 / dz * dy * dx / static_cast<REAL>(9);
        MAP(values,22,2,2,5) = -1 / dz * dy * dx / static_cast<REAL>(9);
        MAP(values,22,2,2,6) = -1 / dz * dy * dx / static_cast<REAL>(9);
        MAP(values,22,2,2,7) = -1 / dz * dy * dx / static_cast<REAL>(9);
        MAP(values,23,0,0,0) = 0;
        MAP(values,23,0,0,1) = 0;
        MAP(values,23,0,0,2) = 0;
        MAP(values,23,0,0,3) = 0;
        MAP(values,23,0,0,4) = 0;
        MAP(values,23,0,0,5) = -dz * dy / dx / static_cast<REAL>(18);
        MAP(values,23,0,0,6) = 0;
        MAP(values,23,0,0,7) = -dz * dy / dx / static_cast<REAL>(18);
        MAP(values,23,0,1,0) = 0;
        MAP(values,23,0,1,1) = 0;
        MAP(values,23,0,1,2) = 0;
        MAP(values,23,0,1,3) = 0;
        MAP(values,23,0,1,4) = 0;
        MAP(values,23,0,1,5) = dz / static_cast<REAL>(24);
        MAP(values,23,0,1,6) = 0;
        MAP(values,23,0,1,7) = -dz / static_cast<REAL>(24);
        MAP(values,23,0,2,0) = 0;
        MAP(values,23,0,2,1) = 0;
        MAP(values,23,0,2,2) = 0;
        MAP(values,23,0,2,3) = 0;
        MAP(values,23,0,2,4) = 0;
        MAP(values,23,0,2,5) = -dy / static_cast<REAL>(12);
        MAP(values,23,0,2,6) = 0;
        MAP(values,23,0,2,7) = -dy / static_cast<REAL>(12);
        MAP(values,23,1,0,0) = 0;
        MAP(values,23,1,0,1) = 0;
        MAP(values,23,1,0,2) = 0;
        MAP(values,23,1,0,3) = 0;
        MAP(values,23,1,0,4) = 0;
        MAP(values,23,1,0,5) = -dz / static_cast<REAL>(24);
        MAP(values,23,1,0,6) = 0;
        MAP(values,23,1,0,7) = dz / static_cast<REAL>(24);
        MAP(values,23,1,1,0) = 0;
        MAP(values,23,1,1,1) = 0;
        MAP(values,23,1,1,2) = 0;
        MAP(values,23,1,1,3) = 0;
        MAP(values,23,1,1,4) = 0;
        MAP(values,23,1,1,5) = dz / dy * dx / static_cast<REAL>(36);
        MAP(values,23,1,1,6) = 0;
        MAP(values,23,1,1,7) = dz / dy * dx / static_cast<REAL>(36);
        MAP(values,23,1,2,0) = 0;
        MAP(values,23,1,2,1) = 0;
        MAP(values,23,1,2,2) = 0;
        MAP(values,23,1,2,3) = 0;
        MAP(values,23,1,2,4) = 0;
        MAP(values,23,1,2,5) = -dx / static_cast<REAL>(24);
        MAP(values,23,1,2,6) = 0;
        MAP(values,23,1,2,7) = dx / static_cast<REAL>(24);
        MAP(values,23,2,0,0) = 0;
        MAP(values,23,2,0,1) = 0;
        MAP(values,23,2,0,2) = 0;
        MAP(values,23,2,0,3) = 0;
        MAP(values,23,2,0,4) = 0;
        MAP(values,23,2,0,5) = -dy / static_cast<REAL>(12);
        MAP(values,23,2,0,6) = 0;
        MAP(values,23,2,0,7) = -dy / static_cast<REAL>(12);
        MAP(values,23,2,1,0) = 0;
        MAP(values,23,2,1,1) = 0;
        MAP(values,23,2,1,2) = 0;
        MAP(values,23,2,1,3) = 0;
        MAP(values,23,2,1,4) = 0;
        MAP(values,23,2,1,5) = dx / static_cast<REAL>(24);
        MAP(values,23,2,1,6) = 0;
        MAP(values,23,2,1,7) = -dx / static_cast<REAL>(24);
        MAP(values,23,2,2,0) = 0;
        MAP(values,23,2,2,1) = 0;
        MAP(values,23,2,2,2) = 0;
        MAP(values,23,2,2,3) = 0;
        MAP(values,23,2,2,4) = 0;
        MAP(values,23,2,2,5) = -1 / dz * dy * dx / static_cast<REAL>(18);
        MAP(values,23,2,2,6) = 0;
        MAP(values,23,2,2,7) = -1 / dz * dy * dx / static_cast<REAL>(18);
        MAP(values,24,0,0,0) = 0;
        MAP(values,24,0,0,1) = 0;
        MAP(values,24,0,0,2) = 0;
        MAP(values,24,0,0,3) = 0;
        MAP(values,24,0,0,4) = 0;
        MAP(values,24,0,0,5) = 0;
        MAP(values,24,0,0,6) = -dz * dy / dx / static_cast<REAL>(36);
        MAP(values,24,0,0,7) = 0;
        MAP(values,24,0,1,0) = 0;
        MAP(values,24,0,1,1) = 0;
        MAP(values,24,0,1,2) = 0;
        MAP(values,24,0,1,3) = 0;
        MAP(values,24,0,1,4) = 0;
        MAP(values,24,0,1,5) = 0;
        MAP(values,24,0,1,6) = dz / static_cast<REAL>(24);
        MAP(values,24,0,1,7) = 0;
        MAP(values,24,0,2,0) = 0;
        MAP(values,24,0,2,1) = 0;
        MAP(values,24,0,2,2) = 0;
        MAP(values,24,0,2,3) = 0;
        MAP(values,24,0,2,4) = 0;
        MAP(values,24,0,2,5) = 0;
        MAP(values,24,0,2,6) = dy / static_cast<REAL>(24);
        MAP(values,24,0,2,7) = 0;
        MAP(values,24,1,0,0) = 0;
        MAP(values,24,1,0,1) = 0;
        MAP(values,24,1,0,2) = 0;
        MAP(values,24,1,0,3) = 0;
        MAP(values,24,1,0,4) = 0;
        MAP(values,24,1,0,5) = 0;
        MAP(values,24,1,0,6) = dz / static_cast<REAL>(24);
        MAP(values,24,1,0,7) = 0;
        MAP(values,24,1,1,0) = 0;
        MAP(values,24,1,1,1) = 0;
        MAP(values,24,1,1,2) = 0;
        MAP(values,24,1,1,3) = 0;
        MAP(values,24,1,1,4) = 0;
        MAP(values,24,1,1,5) = 0;
        MAP(values,24,1,1,6) = -dz / dy * dx / static_cast<REAL>(36);
        MAP(values,24,1,1,7) = 0;
        MAP(values,24,1,2,0) = 0;
        MAP(values,24,1,2,1) = 0;
        MAP(values,24,1,2,2) = 0;
        MAP(values,24,1,2,3) = 0;
        MAP(values,24,1,2,4) = 0;
        MAP(values,24,1,2,5) = 0;
        MAP(values,24,1,2,6) = -dx / static_cast<REAL>(24);
        MAP(values,24,1,2,7) = 0;
        MAP(values,24,2,0,0) = 0;
        MAP(values,24,2,0,1) = 0;
        MAP(values,24,2,0,2) = 0;
        MAP(values,24,2,0,3) = 0;
        MAP(values,24,2,0,4) = 0;
        MAP(values,24,2,0,5) = 0;
        MAP(values,24,2,0,6) = dy / static_cast<REAL>(24);
        MAP(values,24,2,0,7) = 0;
        MAP(values,24,2,1,0) = 0;
        MAP(values,24,2,1,1) = 0;
        MAP(values,24,2,1,2) = 0;
        MAP(values,24,2,1,3) = 0;
        MAP(values,24,2,1,4) = 0;
        MAP(values,24,2,1,5) = 0;
        MAP(values,24,2,1,6) = -dx / static_cast<REAL>(24);
        MAP(values,24,2,1,7) = 0;
        MAP(values,24,2,2,0) = 0;
        MAP(values,24,2,2,1) = 0;
        MAP(values,24,2,2,2) = 0;
        MAP(values,24,2,2,3) = 0;
        MAP(values,24,2,2,4) = 0;
        MAP(values,24,2,2,5) = 0;
        MAP(values,24,2,2,6) = -1 / dz * dy * dx / static_cast<REAL>(36);
        MAP(values,24,2,2,7) = 0;
        MAP(values,25,0,0,0) = 0;
        MAP(values,25,0,0,1) = 0;
        MAP(values,25,0,0,2) = 0;
        MAP(values,25,0,0,3) = 0;
        MAP(values,25,0,0,4) = 0;
        MAP(values,25,0,0,5) = 0;
        MAP(values,25,0,0,6) = dz * dy / dx / static_cast<REAL>(36);
        MAP(values,25,0,0,7) = dz * dy / dx / static_cast<REAL>(36);
        MAP(values,25,0,1,0) = 0;
        MAP(values,25,0,1,1) = 0;
        MAP(values,25,0,1,2) = 0;
        MAP(values,25,0,1,3) = 0;
        MAP(values,25,0,1,4) = 0;
        MAP(values,25,0,1,5) = 0;
        MAP(values,25,0,1,6) = -dz / static_cast<REAL>(24);
        MAP(values,25,0,1,7) = dz / static_cast<REAL>(24);
        MAP(values,25,0,2,0) = 0;
        MAP(values,25,0,2,1) = 0;
        MAP(values,25,0,2,2) = 0;
        MAP(values,25,0,2,3) = 0;
        MAP(values,25,0,2,4) = 0;
        MAP(values,25,0,2,5) = 0;
        MAP(values,25,0,2,6) = -dy / static_cast<REAL>(24);
        MAP(values,25,0,2,7) = dy / static_cast<REAL>(24);
        MAP(values,25,1,0,0) = 0;
        MAP(values,25,1,0,1) = 0;
        MAP(values,25,1,0,2) = 0;
        MAP(values,25,1,0,3) = 0;
        MAP(values,25,1,0,4) = 0;
        MAP(values,25,1,0,5) = 0;
        MAP(values,25,1,0,6) = dz / static_cast<REAL>(24);
        MAP(values,25,1,0,7) = -dz / static_cast<REAL>(24);
        MAP(values,25,1,1,0) = 0;
        MAP(values,25,1,1,1) = 0;
        MAP(values,25,1,1,2) = 0;
        MAP(values,25,1,1,3) = 0;
        MAP(values,25,1,1,4) = 0;
        MAP(values,25,1,1,5) = 0;
        MAP(values,25,1,1,6) = -dz / dy * dx / static_cast<REAL>(18);
        MAP(values,25,1,1,7) = -dz / dy * dx / static_cast<REAL>(18);
        MAP(values,25,1,2,0) = 0;
        MAP(values,25,1,2,1) = 0;
        MAP(values,25,1,2,2) = 0;
        MAP(values,25,1,2,3) = 0;
        MAP(values,25,1,2,4) = 0;
        MAP(values,25,1,2,5) = 0;
        MAP(values,25,1,2,6) = -dx / static_cast<REAL>(12);
        MAP(values,25,1,2,7) = -dx / static_cast<REAL>(12);
        MAP(values,25,2,0,0) = 0;
        MAP(values,25,2,0,1) = 0;
        MAP(values,25,2,0,2) = 0;
        MAP(values,25,2,0,3) = 0;
        MAP(values,25,2,0,4) = 0;
        MAP(values,25,2,0,5) = 0;
        MAP(values,25,2,0,6) = dy / static_cast<REAL>(24);
        MAP(values,25,2,0,7) = -dy / static_cast<REAL>(24);
        MAP(values,25,2,1,0) = 0;
        MAP(values,25,2,1,1) = 0;
        MAP(values,25,2,1,2) = 0;
        MAP(values,25,2,1,3) = 0;
        MAP(values,25,2,1,4) = 0;
        MAP(values,25,2,1,5) = 0;
        MAP(values,25,2,1,6) = -dx / static_cast<REAL>(12);
        MAP(values,25,2,1,7) = -dx / static_cast<REAL>(12);
        MAP(values,25,2,2,0) = 0;
        MAP(values,25,2,2,1) = 0;
        MAP(values,25,2,2,2) = 0;
        MAP(values,25,2,2,3) = 0;
        MAP(values,25,2,2,4) = 0;
        MAP(values,25,2,2,5) = 0;
        MAP(values,25,2,2,6) = -1 / dz * dy * dx / static_cast<REAL>(18);
        MAP(values,25,2,2,7) = -1 / dz * dy * dx / static_cast<REAL>(18);
        MAP(values,26,0,0,0) = 0;
        MAP(values,26,0,0,1) = 0;
        MAP(values,26,0,0,2) = 0;
        MAP(values,26,0,0,3) = 0;
        MAP(values,26,0,0,4) = 0;
        MAP(values,26,0,0,5) = 0;
        MAP(values,26,0,0,6) = 0;
        MAP(values,26,0,0,7) = -dz * dy / dx / static_cast<REAL>(36);
        MAP(values,26,0,1,0) = 0;
        MAP(values,26,0,1,1) = 0;
        MAP(values,26,0,1,2) = 0;
        MAP(values,26,0,1,3) = 0;
        MAP(values,26,0,1,4) = 0;
        MAP(values,26,0,1,5) = 0;
        MAP(values,26,0,1,6) = 0;
        MAP(values,26,0,1,7) = -dz / static_cast<REAL>(24);
        MAP(values,26,0,2,0) = 0;
        MAP(values,26,0,2,1) = 0;
        MAP(values,26,0,2,2) = 0;
        MAP(values,26,0,2,3) = 0;
        MAP(values,26,0,2,4) = 0;
        MAP(values,26,0,2,5) = 0;
        MAP(values,26,0,2,6) = 0;
        MAP(values,26,0,2,7) = -dy / static_cast<REAL>(24);
        MAP(values,26,1,0,0) = 0;
        MAP(values,26,1,0,1) = 0;
        MAP(values,26,1,0,2) = 0;
        MAP(values,26,1,0,3) = 0;
        MAP(values,26,1,0,4) = 0;
        MAP(values,26,1,0,5) = 0;
        MAP(values,26,1,0,6) = 0;
        MAP(values,26,1,0,7) = -dz / static_cast<REAL>(24);
        MAP(values,26,1,1,0) = 0;
        MAP(values,26,1,1,1) = 0;
        MAP(values,26,1,1,2) = 0;
        MAP(values,26,1,1,3) = 0;
        MAP(values,26,1,1,4) = 0;
        MAP(values,26,1,1,5) = 0;
        MAP(values,26,1,1,6) = 0;
        MAP(values,26,1,1,7) = -dz / dy * dx / static_cast<REAL>(36);
        MAP(values,26,1,2,0) = 0;
        MAP(values,26,1,2,1) = 0;
        MAP(values,26,1,2,2) = 0;
        MAP(values,26,1,2,3) = 0;
        MAP(values,26,1,2,4) = 0;
        MAP(values,26,1,2,5) = 0;
        MAP(values,26,1,2,6) = 0;
        MAP(values,26,1,2,7) = -dx / static_cast<REAL>(24);
        MAP(values,26,2,0,0) = 0;
        MAP(values,26,2,0,1) = 0;
        MAP(values,26,2,0,2) = 0;
        MAP(values,26,2,0,3) = 0;
        MAP(values,26,2,0,4) = 0;
        MAP(values,26,2,0,5) = 0;
        MAP(values,26,2,0,6) = 0;
        MAP(values,26,2,0,7) = -dy / static_cast<REAL>(24);
        MAP(values,26,2,1,0) = 0;
        MAP(values,26,2,1,1) = 0;
        MAP(values,26,2,1,2) = 0;
        MAP(values,26,2,1,3) = 0;
        MAP(values,26,2,1,4) = 0;
        MAP(values,26,2,1,5) = 0;
        MAP(values,26,2,1,6) = 0;
        MAP(values,26,2,1,7) = -dx / static_cast<REAL>(24);
        MAP(values,26,2,2,0) = 0;
        MAP(values,26,2,2,1) = 0;
        MAP(values,26,2,2,2) = 0;
        MAP(values,26,2,2,3) = 0;
        MAP(values,26,2,2,4) = 0;
        MAP(values,26,2,2,5) = 0;
        MAP(values,26,2,2,6) = 0;
        MAP(values,26,2,2,7) = -1 / dz * dy * dx / static_cast<REAL>(36);
    }
};